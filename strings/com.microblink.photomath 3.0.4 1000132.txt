<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="abc_action_bar_home_description">Navigate home</string>
    <string name="abc_action_bar_home_description_format">%1$s, %2$s</string>
    <string name="abc_action_bar_home_subtitle_description_format">%1$s, %2$s, %3$s</string>
    <string name="abc_action_bar_up_description">Navigate up</string>
    <string name="abc_action_menu_overflow_description">More options</string>
    <string name="abc_action_mode_done">Done</string>
    <string name="abc_activity_chooser_view_see_all">See all</string>
    <string name="abc_activitychooserview_choose_application">Choose an app</string>
    <string name="abc_capital_off">OFF</string>
    <string name="abc_capital_on">ON</string>
    <string name="abc_search_hint">Search…</string>
    <string name="abc_searchview_description_clear">Clear query</string>
    <string name="abc_searchview_description_query">Search query</string>
    <string name="abc_searchview_description_search">Search</string>
    <string name="abc_searchview_description_submit">Submit query</string>
    <string name="abc_searchview_description_voice">Voice search</string>
    <string name="abc_shareactionprovider_share_with">Share with</string>
    <string name="abc_shareactionprovider_share_with_application">Share with %s</string>
    <string name="abc_toolbar_collapse_description">Collapse</string>
    <string name="common_google_play_services_enable_button">Enable</string>
    <string name="common_google_play_services_enable_text">"%1$s won't work unless you enable Google Play services."</string>
    <string name="common_google_play_services_enable_title">Enable Google Play services</string>
    <string name="common_google_play_services_install_button">Install</string>
    <string name="common_google_play_services_install_text_phone">"%1$s won't run without Google Play services, which are missing from your phone."</string>
    <string name="common_google_play_services_install_text_tablet">"%1$s won't run without Google Play services, which are missing from your tablet."</string>
    <string name="common_google_play_services_install_title">Get Google Play services</string>
    <string name="common_google_play_services_notification_ticker">Google Play services error</string>
    <string name="common_google_play_services_unknown_issue">%1$s is having trouble with Google Play services. If the problem persists, please contact the developer for assistance.</string>
    <string name="common_google_play_services_unsupported_text">%1$s relies on Google Play services, which is not supported by your device. Contact the manufacturer for assistance.</string>
    <string name="common_google_play_services_unsupported_title">Google Play services</string>
    <string name="common_google_play_services_update_button">Update</string>
    <string name="common_google_play_services_update_text">"%1$s won't run unless you update Google Play services."</string>
    <string name="common_google_play_services_update_title">Update Google Play services</string>
    <string name="common_google_play_services_updating_text">"%1$s won't run without Google Play services, which are currently updating."</string>
    <string name="common_google_play_services_updating_title">Google Play services are updating</string>
    <string name="common_google_play_services_wear_update_text">New version of Google Play services needed. It will update itself shortly.</string>
    <string name="common_open_on_phone">Open on phone</string>
    <string name="common_signin_button_text">Sign in</string>
    <string name="common_signin_button_text_long">Sign in with Google</string>
    <string name="search_menu_title">Search</string>
    <string name="status_bar_notification_info_overflow">999+</string>
    <string name="about_contact_us">Contact us</string>
    <string name="about_microblink">Photomath is built on real-time machine vision technology developed by Microblink.</string>
    <string name="about_need_help">Need help?</string>
    <string name="about_send_us_a_question">Send us a question</string>
    <string name="about_terms_of_use">Terms of use</string>
    <string name="absolute_value">"&lt;p>&lt;b>The absolute value&lt;/b> of any number &lt;i>n&lt;/i>, is its distance from zero on a number line. The absolute value of &lt;i>n&lt;/i> is written as |&lt;i>n&lt;/i>|. Therefore, |&lt;i>n&lt;/i>| = &lt;i>n&lt;/i> for a positive number &lt;i>n&lt;/i>, |-&lt;i>n&lt;/i>| = &lt;i>n&lt;/i> for a negative number -&lt;i>n&lt;/i>, and |0| = 0.&lt;/p>For example:&lt;/p>&lt;img class='center' src='absolute_value1.svg'/>&lt;/p>&lt;p>We are looking for an absolute value of 5 which means that we are wondering how far is 5 from zero (how many steps you need to pass on a number line to get from 0 to 5).&lt;/p>&lt;p>On the number line, there are &lt;b>5 steps&lt;/b> between numbers 5 and zero, so the answer is 5.&lt;/p>&lt;img class='center' src='absolute_value2.svg'/>&lt;/p>&lt;p>&lt;img class='center' src='absolute_value3.svg'/>&lt;/p>&lt;img class='center' src='absolute_value4.svg'/>&lt;/p>&lt;p>&lt;img class='center' src='absolute_value5.svg'/>&lt;/p>&lt;p>Here we see that negative 3 is 3 steps away from zero.&lt;/p>&lt;p>Therefore,&lt;/p>&lt;img class='center' src='absolute_value6.svg'/>&lt;/p>&lt;p>&lt;b>Note:&lt;/b> You should always keep in mind that an absolute value of any negative number will be a positive number.&lt;/p>"</string>
    <string name="addition_and_subtraction_rules">&lt;p>Separately calculate the sum of all the &lt;strong style=\"color: #0000ff;\">positive&lt;/strong> and all the &lt;strong style=\"color: #ff0000;\">negative&lt;/strong> numbers, and then determine the sum of the two resultant values.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"addition_subtraction_rules.svg\" alt=\"\" />&lt;/p></string>
    <string name="annual_billing">Annual billing</string>
    <string name="argument">"&lt;p>&lt;strong style='color: #ff0000;'>A logarithm&lt;/strong> is the power to which a number must be raised to get some other number.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='log_6.svg' alt='' />&lt;/p>&lt;p>because &lt;font style='color:#ff0000;'>2&lt;/font> raised to the power of &lt;font style='color:#ff0000;'>3&lt;/font> is &lt;font style='color: #ff0000;'>8&lt;/font>&lt;/p>&lt;p>The statements&lt;/p>&lt;p>&lt;img class='center' src='log_5.svg' alt='' />&lt;/p>&lt;p>are equivalent statements, where &lt;/span>&lt;strong style='color:#ff0000;'>a&lt;/strong> is the base of the logarithm and &lt;strong style='color:#ff0000;'>n&lt;/strong> is called the argument of the logarithm.&lt;/p>"</string>
    <string name="base">"&lt;p>&lt;strong style='color: #ff0000;'>A logarithm&lt;/strong> is the power to which a number must be raised to get some other number.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='log_6.svg' alt='' />&lt;/p>&lt;p>because &lt;font style='color:#ff0000;'>2&lt;/font> raised to the power of &lt;font style='color:#ff0000;'>3&lt;/font> is &lt;font style='color: #ff0000;'>8&lt;/font>&lt;/p>&lt;p>The statements&lt;/p>&lt;p>&lt;img class='center' src='log_5.svg' alt='' />&lt;/p>&lt;p>are equivalent statements, where &lt;/span>&lt;strong style='color:#ff0000;'>a&lt;/strong> is the base of the logarithm and &lt;strong style='color:#ff0000;'>n&lt;/strong> is called the argument of the logarithm.&lt;/p>"</string>
    <string name="base_and_argument">"&lt;p>&lt;strong style='color: #ff0000;'>A logarithm&lt;/strong> is the power to which a number must be raised to get some other number.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='log_6.svg' alt='' />&lt;/p>&lt;p>because &lt;font style='color:#ff0000;'>2&lt;/font> raised to the power of &lt;font style='color:#ff0000;'>3&lt;/font> is &lt;font style='color: #ff0000;'>8&lt;/font>&lt;/p>&lt;p>The statements&lt;/p>&lt;p>&lt;img class='center' src='log_5.svg' alt='' />&lt;/p>&lt;p>are equivalent statements, where &lt;/span>&lt;strong style='color:#ff0000;'>a&lt;/strong> is the base of the logarithm and &lt;strong style='color:#ff0000;'>n&lt;/strong> is called the argument of the logarithm.&lt;/p>"</string>
    <string name="button_done">Done</string>
    <string name="button_no">No</string>
    <string name="button_ok">Ok</string>
    <string name="button_skip">Skip</string>
    <string name="button_torch">Torch</string>
    <string name="button_yes">Yes</string>
    <string name="camera_access">To scan math problems, Photomath <b>needs permission</b> to access the camera.</string>
    <string name="camera_button">Allow access</string>
    <string name="camera_error">The <b>camera is busy</b>", another program might be using it. Close other programs and/or restart your device.

%1$s"</string>
    <string name="camera_more_info">More info</string>
    <string name="camera_not_supported">Your device doesn’t have a supported camera. Please use a device with an <b>auto-focus</b> camera.</string>
    <string name="camera_preview_message">Sorry, can’t figure this out!</string>
    <string name="close_intro">Close intro</string>
    <string name="coefficient">&lt;p>An &lt;strong style=\"color: #ff0000;\">algebraic expression&lt;/strong> is made up of terms separated by plus and minus signs.&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">term&lt;/strong> is either a single number or a variable, or number and variables multiplied together.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"terms_1.svg\" alt=\"\" />&lt;/p>&lt;p>are all terms.&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">coefficient&lt;/strong> is a number used to multiply a variable.&lt;/p>&lt;p>For example, the coefficient of &lt;strong>4x&lt;/strong> is &lt;strong>4&lt;/strong>.&lt;/p></string>
    <string name="coefficients">&lt;p>An &lt;strong style=\"color: #ff0000;\">algebraic expression&lt;/strong> is made up of terms separated by plus and minus signs.&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">term&lt;/strong> is either a single number or a variable, or number and variables multiplied together.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"terms_1.svg\" alt=\"\" />&lt;/p>&lt;p>are all terms.&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">coefficient&lt;/strong> is a number used to multiply a variable.&lt;/p>&lt;p>For example, the coefficient of &lt;strong>4x&lt;/strong> is &lt;strong>4&lt;/strong>.&lt;/p></string>
    <string name="common_denominator">"&lt;p>When two or more fractions have equal denominators, we call them &lt;strong>common denominators&lt;/strong>.&lt;/p>&lt;p>When adding or subtracting fractions with common denominators, simply write all numerators with the given operations &lt;strong>above that common denominator&lt;/strong>.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='common_denominator.svg'/>&lt;/p>"</string>
    <string name="complex_fraction">"&lt;p>&lt;strong style=\"color: #ff0000;\">A complex fraction&lt;/strong> is a fraction where the numerator, denominator, or both contain a fraction or fractional expressions.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='complex_frac.svg'/>&lt;/p>&lt;p>are all complex fractions.&lt;/p>"</string>
    <string name="constant">&lt;p>An &lt;strong style=\"color: #ff0000;\">algebraic expression&lt;/strong> is made up of terms separated by plus or minus sign.&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">term&lt;/strong> is either a single number or a variable, or number and variables multiplied together.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"terms_1.svg\" alt=\"\" />&lt;/p>&lt;p>are all terms.&lt;/p>&lt;p>Terms made of just a number, like &lt;strong>7&lt;/strong>, are called &lt;strong style=\"color: #ff0000;\">constants&lt;/strong> and the letters in terms like &lt;strong>3x&lt;sup>2&lt;/sup>y&lt;sup>4&lt;/sup>&lt;/strong> are called variables.&lt;/p></string>
    <string name="constants">&lt;p>An &lt;strong style=\"color: #ff0000;\">algebraic expression&lt;/strong> is made up of terms separated by plus or minus sign.&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">term&lt;/strong> is either a single number or a variable, or number and variables multiplied together.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"terms_1.svg\" alt=\"\" />&lt;/p>&lt;p>are all terms.&lt;/p>&lt;p>Terms made of just a number, like &lt;strong>7&lt;/strong>, are called &lt;strong style=\"color: #ff0000;\">constants&lt;/strong> and the letters in terms like &lt;strong>3x&lt;sup>2&lt;/sup>y&lt;sup>4&lt;/sup>&lt;/strong> are called variables.&lt;/p></string>
    <string name="copy_image">Copy image</string>
    <string name="copy_latex">Copy LaTeX</string>
    <string name="cramers_rule">"&lt;p>&lt;strong style='color: #ff0000;'>Cramer's Rule&lt;/strong> can be used to solve a system of linear equations.&lt;/p>&lt;p>Write the coefficient matrix of the system, call this matrix A.&lt;/p>&lt;p>(Note: If it is not square, Cramer&amp;rsquo;s rule is not applicable.)&lt;/p>&lt;p>Then solve the determinant of the matrix A.&lt;/p>&lt;p>Suppose the first variable of the system is x. &amp;nbsp;Write the matrix A as follows: substitute the column of numbers of right side of the equal sign instead of the first column of matrix A, and solve the determinant A&lt;sub>x&lt;/sub>.&lt;/p>&lt;p>Do the same with the remaining variables. In each case substitute the column of numbers instead of the column of A that corresponds to the variable.&lt;/p>&lt;p>If the variables are x, y and z, then the solution of the system of equations is the ordered triple where:&lt;/p>&lt;p>&lt;img class='center' src='cramers_rule1.svg' alt='' />&lt;/p>&lt;p>For example: Solve the system&lt;/p>&lt;p>&lt;img class='center' src='cramers_rule2.svg' alt='' />&lt;/p>"</string>
    <string name="cross_multiplication">&lt;p>&lt;strong>Cross­multiplying&lt;/strong> two fractions means that we multiply the numerator of each fraction by the denominator of the other.&lt;/p>&lt;p>Given an equation like: &lt;strong>a/b = c/d&lt;/strong> (where b and d are not zero), we can cross­multiply to get:&lt;/p>&lt;p>&lt;strong>a&lt;/strong> &amp;middot; &lt;strong>d&lt;/strong> = &lt;strong>b&lt;/strong> &amp;middot; &lt;strong>c&lt;/strong>&lt;/p>&lt;p>We use cross­multiplication to simplify an equation or determine the value of a variable.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" style=\"display: block; margin­left: auto; margin­right: auto;\" src=\"cross_multiply3.svg\" alt=\"\" />&lt;/p>&lt;p>Cross­multiply to get:&lt;/p>&lt;p>&lt;img class=\"center\" style=\"display: block; margin­left: auto;margin­right: auto;\" src=\"cross_multiply4.svg\" alt=\"\" />&lt;/p>&lt;p>Cross­multiplication can &lt;strong>also be used in comparing positive fractions&lt;/strong>: a/b &amp;lt; c/d (where b and d are not zero), we get &lt;strong>a &amp;middot; d &amp;lt; b &amp;middot; c&lt;/strong>.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" style=\"display: block; margin­left: auto; margin­right: auto;\" src=\"cross_multiply1.svg\" alt=\"\" />&lt;/p>&lt;p>cross-­multiply to get&lt;/p>&lt;p>&lt;img class=\"center\" style=\"display: block; margin­left: auto;margin­right: auto;\" src=\"cross_multiply2.svg\" alt=\"\" />&lt;/p></string>
    <string name="cross_multiply">&lt;p>&lt;strong>Cross­multiplying&lt;/strong> two fractions means that we multiply the numerator of each fraction by the denominator of the other.&lt;/p>&lt;p>Given an equation like: &lt;strong>a/b = c/d&lt;/strong> (where b and d are not zero), we can cross­multiply to get:&lt;/p>&lt;p>&lt;strong>a&lt;/strong> &amp;middot; &lt;strong>d&lt;/strong> = &lt;strong>b&lt;/strong> &amp;middot; &lt;strong>c&lt;/strong>&lt;/p>&lt;p>We use cross­multiplication to simplify an equation or determine the value of a variable.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" style=\"display: block; margin­left: auto; margin­right: auto;\" src=\"cross_multiply3.svg\" alt=\"\" />&lt;/p>&lt;p>Cross­multiply to get:&lt;/p>&lt;p>&lt;img class=\"center\" style=\"display: block; margin­left: auto;margin­right: auto;\" src=\"cross_multiply4.svg\" alt=\"\" />&lt;/p>&lt;p>Cross­multiplication can &lt;strong>also be used in comparing positive fractions&lt;/strong>: a/b &amp;lt; c/d (where b and d are not zero), we get &lt;strong>a &amp;middot; d &amp;lt; b &amp;middot; c&lt;/strong>.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" style=\"display: block; margin­left: auto; margin­right: auto;\" src=\"cross_multiply1.svg\" alt=\"\" />&lt;/p>&lt;p>cross-­multiply to get&lt;/p>&lt;p>&lt;img class=\"center\" style=\"display: block; margin­left: auto;margin­right: auto;\" src=\"cross_multiply2.svg\" alt=\"\" />&lt;/p></string>
    <string name="cube_root">&lt;p>&lt;strong style=\"color: #ff0000;\">The cube root&lt;/strong> of a number &lt;em>n&lt;/em> is a number &lt;em>x&lt;/em> such that x&lt;sup>3&lt;/sup> = n. In other words, the cube root of a number n is a value that, when multiplied by itself three times, gives the number &lt;em>n&lt;/em>.&lt;/p>&lt;p>For example:&lt;/p>&lt;p style=\"text-align: center;\">5 &amp;middot;5 &amp;middot;5 = 125, therefore 5 is a cube root of 125.&lt;/p>&lt;p>All real numbers (that are not equal to zero) have exactly one real cube root and a pair of complex conjugate cube roots.&lt;/p>&lt;p>For example, the real cube root of 8, denoted &lt;sup>3&lt;/sup>&amp;radic;8, is 2, because 2&lt;sup>3&lt;/sup> = 8, while the complex conjugate cube roots of 8 are &amp;minus;1 + &amp;radic;3i and &amp;minus;1 &amp;minus; &amp;radic;3i.&lt;/p></string>
    <string name="denominators">"&lt;p>The &lt;strong>numerator&lt;/strong> is the top number in a fraction, and the &lt;strong>denominator&lt;/strong> is the bottom number in a fraction.&lt;/p>&lt;p>For example: in the fraction&lt;/p>&lt;p>&lt;img class='center' src='num_denom.svg'/>&lt;/p>&lt;p>the &lt;strong>&lt;font color=\"red\">number 3 is the numerator&lt;/font>&lt;/strong>, and the &lt;strong>&lt;font color=\"blue\">number 4 is the denominator&lt;/font>&lt;/strong>.&lt;/p>"</string>
    <string name="drawer_close">Close</string>
    <string name="drawer_open">Open</string>
    <string name="edit">Edit</string>
    <string name="editor_empty_state_message">Type equation here…</string>
    <string name="equal_terms">&lt;p>A &lt;strong style=\"color: #ff0000;\">term&lt;/strong> is either a single number or a variable, or numbers and variables multiplied together.&lt;/p>&lt;p>For example: 4x, 7 and 3x&lt;sup>2&lt;/sup>y&lt;sup>3&lt;/sup> are all terms.&lt;/p>&lt;p>&lt;strong style=\"color: #ff0000;\">Equal terms&lt;/strong> are terms that are identical.&lt;/p>&lt;p>For example: &lt;strong style=\"color: #000080;\">4&lt;/strong> and &lt;strong style=\"color: #000080;\">4&lt;/strong>, &lt;strong style=\"color: #008000;\">2x&lt;/strong> and &lt;strong style=\"color: #008000;\">2x&lt;/strong>, &lt;strong style=\"color: #ff6600;\">5abc&lt;sup>2&lt;/sup>&lt;/strong> and &lt;strong style=\"color: #ff6600;\">5abc&lt;sup>2&lt;/sup>&lt;/strong> are equal terms.&lt;/p></string>
    <string name="exponent">&lt;p>&lt;strong style=\"color: #ff0000;\">The exponent&lt;/strong> (or index or power) is an integer &lt;em>n&lt;/em> usually shown as a superscript to the right of the base &lt;em>b&lt;/em> in exponentiation &lt;em>b&lt;sup>n&lt;/sup>&lt;/em>.&lt;/p>&lt;p>The exponent &lt;strong style=\"color: #ff0000;\">indicates the number of times the number is multiplied&lt;/strong>.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"exponent1.svg\" alt=\"\" />&lt;/p>&lt;img class=\"center\" src=\"exponent2.svg\" alt=\"\" />&lt;/p></string>
    <string name="exponential_form">"&lt;p>We use &lt;strong style='color: #ff0000;'>exponential notation&lt;/strong> to write &lt;strong style='color:#ff0000;'> repeated multiplication more efficiently.&lt;/strong>&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='exponential_form1.svg' alt='' />&lt;/p>&lt;p>The 10 in the expression 10&lt;sup>3&lt;/sup> is called the &lt;strong style='color:#ff0000;'>base&lt;/strong>, and the number 3 is called the &lt;strong style='color:#ff0000;'>exponent&lt;/strong>. The base tells what number or expression is being multiplied and the exponent tells us the number of times the base is multiplied.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='exponential_form2.svg' alt='' />&lt;/p>&lt;p>&lt;img class='center' src='exponential_form3.svg' alt='' />&lt;/p>&lt;p>We use exponential notation to simplify expressions.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='exponential_form4.svg' alt='' />&lt;/p>&lt;p>&lt;img class='center' src='exponential_form5.svg' alt='' />&lt;/p>"</string>
    <string name="extract">"&lt;p>Extract (factor out) the negative sign from an expression by placing \"-\" in front of the parenthesis and flipping the sign of every term inside.&lt;/p>&lt;p>For example:&lt;img class='center' src='extract_negative1.svg'/>Becomes:&lt;img class='center' src='extract_negative2.svg'/>&lt;/p>"</string>
    <string name="factor">&lt;p>Take &lt;strong style=\"color: #ff0000;\">the common value&lt;/strong> out of the expression&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"common_value1.svg\" alt=\"\" />&lt;/p>&lt;p>&lt;img class=\"center\" src=\"common_value2.svg\" alt=\"\" />&lt;/p></string>
    <string name="feedback_not_available">"Help &amp; feedback is currently not available
Please try again later…"</string>
    <string name="fragment_title_camera">Camera</string>
    <string name="fragment_title_editor">Keyboard</string>
    <string name="gauss_jordan_method">"&lt;p>&lt;strong style='color: #ff0000;'>The Gauss­-Jordan method&lt;/strong> can be used to solve a system of linear equations.&lt;/p>&lt;p>This row operations on matrix of a system produce the matrix of an equivalent system, (a system with the same solution as the original one):&lt;/p>&lt;ul>&lt;li>Interchange any two rows.&lt;/li>&lt;li>Multiply each element of a row by a nonzero constant&lt;/li>&lt;li>Replace a row by the sum of itself and a constant multiple of another row of the matrix.&lt;/li>&lt;/ul>&lt;p>For example:&lt;/p>&lt;p>We will solve system of linear equations (1) using Gauss­ Jordan method.&lt;/p>&lt;p>&lt;img class='center'src='The_GJ_method.svg' alt='' />&lt;/p>"</string>
    <string name="greatest_common_divisor">&lt;p>&lt;strong style=\"color: #ff0000;\">The greatest common divisor&lt;/strong> (GCD) of two or more integers, when at least one of them is not zero, is the largest positive integer &lt;em>n&lt;/span>&lt;/em> that divides the numbers without a remainder.&lt;/p>&lt;p>For example: The GCD of &lt;strong>12&lt;/strong> and &lt;strong>15&lt;/strong> is &lt;strong>3&lt;/strong>.&lt;/p>&lt;p>Usually written:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"GCD.svg\" alt=\"\" />&lt;/p>&lt;p>&lt;strong style=\"color: #ff0000;\">The greatest common divisor&lt;/strong> is also known as the greatest common factor (GCF), highest common factor (HCF), highest common divisor (HCD) or greatest common measure (GCM).&lt;/strong>&lt;/p></string>
    <string name="greatest_common_factor">"&lt;p>&lt;strong style=\"color: #ff0000;\">Factors&lt;/strong> are numbers you multiply together to get another number.&lt;/p>&lt;p>For example: &lt;bold style=\"color: #ff0000;\">1&lt;/bold>, &lt;bold style=\"color: #ff0000;\">2&lt;/bold>, &lt;bold style=\"color: #ff0000;\">3&lt;/bold>, &lt;bold style=\"color: #ff0000;\">4&lt;/bold>,&lt;bold style=\"color: #ff0000;\"> 6&lt;/bold> and &lt;bold style=\"color: #ff0000;\">12&lt;/bold> are factors of the number &lt;strong>12&lt;/strong>.&lt;/p>&lt;p>&lt;strong style=\"color: #ff0000;\">The greatest common factor&lt;/strong> (GCF) of two or more integers, when at least one of them is not zero, is the largest positive integer &lt;em>n&lt;/em> that divides exactly into two or more numbers.&lt;/p>&lt;p>For example: &lt;/p>&lt;p>Let's find the GCF of the number &lt;strong>12&lt;/strong> and &lt;strong>30&lt;/strong>.&lt;/p>&lt;p>To find the GCF, first find the factors of both numbers.&lt;/p>&lt;p>The factors of &lt;strong>12&lt;/strong> are: &lt;strong style=\"color: #ff0000;\">1&lt;/strong>, &lt;strong style=\"color: #ff0000;\">2&lt;/strong>, &lt;strong style=\"color: #ff0000;\">3&lt;/strong>, &lt;strong style=\"color: #ff0000;\">4&lt;/strong>, &lt;strong style=\"color: #ff0000;\">6&lt;/strong> and &lt;strong style=\"color: #ff0000;\">12&lt;/strong>.&lt;/p>&lt;p>The factors of &lt;strong>30&lt;/strong> are: &lt;strong style=\"color: #ff0000;\">1&lt;/strong>, &lt;strong style=\"color: #ff0000;\">2&lt;/strong>, &lt;strong style=\"color: #ff0000;\">3&lt;/strong>, &lt;strong style=\"color: #ff0000;\">5&lt;/strong>, &lt;strong style=\"color: #ff0000;\">6&lt;/strong>, &lt;strong style=\"color: #ff0000;\">10&lt;/strong>, &lt;strong style=\"color: #ff0000;\">15&lt;/strong> and &lt;strong style=\"color: #ff0000;\">30&lt;/strong>.&lt;/p>&lt;p>So the common factors of &lt;strong>12&lt;/strong> and &lt;strong>30&lt;/strong> are: &lt;strong style=\"color: #ff0000;\">1&lt;/strong>, &lt;strong style=\"color: #ff0000;\">2&lt;/strong>, &lt;strong style=\"color: #ff0000;\">3&lt;/strong> and &lt;strong style=\"color: #ff0000;\">6&lt;/strong>.&lt;/p>&lt;p>Therefore, the greatest common factor of &lt;strong>12&lt;/strong> and &lt;strong>30&lt;/strong> is the number &lt;strong style=\"color: #ff0000;\">6&lt;/strong>. Usually written &lt;strong>GCF(12,30)=6&lt;/strong>.&lt;/p>&lt;p>&lt;strong style=\"color: #ff0000;\">The greatest common factor&lt;/strong> is also known as the greatest common divisor (GCD), highest common factor (HCF), highest common divisor (HCD) or greatest common measure (GCM).&lt;/p>&lt;p>Terms can also have &lt;strong style=\"color: #ff0000;\">common factors&lt;/strong>.&lt;/p>&lt;p>For example: The greatest common factor of &lt;strong>12xy&lt;sup>2&lt;/sup>&lt;/strong> and &lt;strong>30xy&lt;/strong> is &lt;strong>6xy.&lt;/strong>&lt;/span>&lt;/strong>&lt;/span>&lt;/strong>&lt;/p>"</string>
    <string name="handwriting_recognition">Handwriting recognition</string>
    <string name="history_cleared">History cleared</string>
    <string name="history_scan_more">Scan/type math problems to view history</string>
    <string name="history_swipe_left">Swipe right to reveal previous scanned items</string>
    <string name="improper_fraction">&lt;p>There are three types of fractions:&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">proper fraction&lt;/strong> is a fraction whose numerator is less than its denominator.&lt;/p>&lt;p>For example: 2&amp;frasl;7&lt;/p>&lt;p>An &lt;strong style=\"color: #ff0000;\">improper fraction&lt;/strong> is a fraction whose numerator is greater (or equal to) than its denominator.&lt;/p>&lt;p>For example: 4&amp;frasl;3, 7&amp;frasl;7&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">mixed number&lt;/strong> is a improper fraction but written as a whole number and proper fraction together.&lt;/p>&lt;p>For example: 2 ⅕&lt;/p></string>
    <string name="improve_your_grades">Improve your grades with the Plus version!</string>
    <string name="intro_mascotte_message">Handwriting recognition works best when you write neatly :)</string>
    <string name="introduction_close">Close intro</string>
    <string name="introduction_start">Get started</string>
    <string name="laplace_expansion">&lt;p>&lt;strong style=\"color: #ff0000;\">The Laplace expansion&lt;/strong> is a procedure for finding the determinant of a square matrix. The method can be applied to a matrix of any size.&lt;/p>&lt;p>The Laplace expansion can be used on any row or column of the matrix.&lt;/p>&lt;p>(Note: Remember to write down the correct sign of each element in the determinant.)&lt;/p>&lt;p>&lt;img class=\"center\" src=\"laplace_expansion2.svg\" alt=\"\" />&lt;/p>&lt;p>Determinant of 3x3 matrix, Laplace expansion used on first column.&lt;/p>&lt;p>&lt;img class=\"center\" src=\"laplace_expansion1.svg\" alt=\"\" />&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"laplace_expansion3.svg\" alt=\"\" />&lt;/p></string>
    <string name="latex_copied">LaTeX copied</string>
    <string name="least_common_denominator">"&lt;p>&lt;strong style=\"color: #ff0000;\">The least common denominator&lt;/strong> is the \"smallest\" of all possible common denominators.&lt;/p>&lt;p>Finding the least common denominator of two numbers is the same as finding the &lt;strong style=\"color: #ff0000;\">least common multiple of the denominators&lt;/strong>.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"least_c_denominator1.svg\" alt=\"\" />&lt;/p>&lt;p>To find &lt;strong style=\"color: #ff0000;\">the least common denominator&lt;/strong> of the two fractions, let's find the least common multiple of &lt;strong>15&lt;/strong> and &lt;strong>6&lt;/strong>.&lt;p>Multiples of 15:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"multiplies1.svg\" alt=\"\" />&lt;/p>&lt;p>Multiples of 6:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"multiplies2.svg\" alt=\"\" />&lt;/p>&lt;p>The least common multiple of &lt;strong>15&lt;/strong> and &lt;strong>6&lt;/strong> is the number &lt;strong>30&lt;/strong>, therefore, &lt;strong>the least common denominator of the given fractions is 30&lt;/strong>.&lt;/p>"</string>
    <string name="like_terms">&lt;p>An &lt;strong style=\"color: #ff0000;\">algebraic expression&lt;/strong> is made up of terms separated by plus and minus signs.&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">term&lt;/strong> is either a single number or a variable, or number and variables multiplied together.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"terms_1.svg\" alt=\"\" />&lt;/p>&lt;p>are all terms. &lt;/p>&lt;/p>&lt;p>&lt;strong style=\"color: #ff0000;\">Like terms&lt;/strong> are terms whose variables (and their exponents) are the same.&lt;/p>&lt;p>(Note: the coefficients can be different).&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"terms_2.svg\" alt=\"\" />&lt;/p>&lt;p>are all like terms because the variables are all &lt;strong>xy&lt;sup>2&lt;/sup>&lt;/strong>&lt;/p></string>
    <string name="logarithmic_product_and_quotient_rule">&lt;p>&lt;strong>The sum and the difference of the logarithms&lt;/strong> is equal to the logarithm of their product and quotient.&lt;/p>&lt;p>&lt;img class=\"center\" src=\"log_7.svg\" alt=\"\" />&lt;/p>&lt;p>(Note: The bases of the logarithms need to be the same)&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"log_8.svg\" alt=\"\" />&lt;/p></string>
    <string name="logarithmic_product_rule">"&lt;p>&lt;strong>The sum  of logarithm of a and logarithm of b&lt;/strong> is equal to the logarithm of their product.&lt;/span>&lt;/p>&lt;p>&lt;img class=\"center\" src=\"log_1.svg\" alt=\"\" />&lt;/p>&lt;p>(Note: The bases of the logarithms need to be the same)&lt;/p>&lt;p>The same rule applies to the sum of more than two logarithms.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"log_2.svg\" alt=\"\" />&lt;/p>"</string>
    <string name="logarithmic_quotient_rule">&lt;p>&lt;strong>The difference of logarithm of a and logarithm of b&lt;/strong> is equal to the logarithm of their quotient.&lt;/p>&lt;p>&lt;img class=\"center\" src=\"log_3.svg\" alt=\"\" />&lt;/p>&lt;p>(Note: The bases of the logarithms need to be the same)&lt;/p>&lt;p>The same rule applies to the difference of more than two logarithms.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"log_4.svg\" alt=\"\" />&lt;/p></string>
    <string name="message_button_camera">Camera screen</string>
    <string name="message_button_exit">Exit</string>
    <string name="message_exit_or_camera">Do you want to exit or get back to the camera screen?</string>
    <string name="minus_in_front_of_parenthesis">&lt;p>&lt;strong style=\"color: #ff0000;\">The minus sign&lt;/strong> changes the sign of the expression inside the parenthesis, so when removing the parenthesis, &lt;em>change the sign of every term in the expression&lt;/em>.&lt;/p>&lt;p>For example:&lt;/p>&lt;p> &lt;img class=\"center\" src=\"minus_sign_parenthesis.svg\" alt=\"\" />&lt;/p>&lt;p> &lt;img class=\"center\" src=\"minus_sign_parenthesis_x.svg\" alt=\"\" />&lt;/p></string>
    <string name="mixed_fraction">&lt;p>&lt;strong>A mixed number&lt;/strong> is a sum of an integer and a proper fraction.&lt;/p>&lt;p>Mixed numbers are written without the \"+\".&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"mixed_fraction1.svg\" alt=\"\" />&lt;/p>&lt;p>is a mixed number.&lt;/p>&lt;p>&lt;strong style=\"color: #ff0000;\">3&lt;/strong> is its whole part, and &lt;strong style=\"color: #ff0000;\">&lt;sup>2&lt;/sup>&amp;frasl;&lt;sub>7&lt;/sub>&lt;/strong> is its fractional part.&lt;/p>&lt;p>We can use either an &lt;strong>improper fraction&lt;/strong> (a fraction whose numerator is greater than its denominator) or a &lt;strong>mixed number&lt;/strong> to show the same amount.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"mixed_fraction2.svg\" alt=\"\" />&lt;/p></string>
    <string name="mixed_fractions">&lt;p>&lt;strong>A mixed number&lt;/strong> is a sum of an integer and a proper fraction.&lt;/p>&lt;p>Mixed numbers are written without the \"+\".&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"mixed_fraction1.svg\" alt=\"\" />&lt;/p>&lt;p>is a mixed number.&lt;/p>&lt;p>&lt;strong style=\"color: #ff0000;\">3&lt;/strong> is its whole part, and &lt;strong style=\"color: #ff0000;\">&lt;sup>2&lt;/sup>&amp;frasl;&lt;sub>7&lt;/sub>&lt;/strong> is its fractional part.&lt;/p>&lt;p>We can use either an &lt;strong>improper fraction&lt;/strong> (a fraction whose numerator is greater than its denominator) or a &lt;strong>mixed number&lt;/strong> to show the same amount.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"mixed_fraction2.svg\" alt=\"\" />&lt;/p></string>
    <string name="mixed_number">&lt;p>&lt;strong>A mixed number&lt;/strong> is a sum of an integer and a proper fraction.&lt;/p>&lt;p>Mixed numbers are written without the \"+\".&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"mixed_fraction1.svg\" alt=\"\" />&lt;/p>&lt;p>is a mixed number.&lt;/p>&lt;p>&lt;strong style=\"color: #ff0000;\">3&lt;/strong> is its whole part, and &lt;strong style=\"color: #ff0000;\">&lt;sup>2&lt;/sup>&amp;frasl;&lt;sub>7&lt;/sub>&lt;/strong> is its fractional part.&lt;/p>&lt;p>We can use either an &lt;strong>improper fraction&lt;/strong> (a fraction whose numerator is greater than its denominator) or a &lt;strong>mixed number&lt;/strong> to show the same amount.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"mixed_fraction2.svg\" alt=\"\" />&lt;/p></string>
    <string name="mixed_numbers">&lt;p>&lt;strong>A mixed number&lt;/strong> is a sum of an integer and a proper fraction.&lt;/p>&lt;p>Mixed numbers are written without the \"+\".&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"mixed_fraction1.svg\" alt=\"\" />&lt;/p>&lt;p>is a mixed number.&lt;/p>&lt;p>&lt;strong style=\"color: #ff0000;\">3&lt;/strong> is its whole part, and &lt;strong style=\"color: #ff0000;\">&lt;sup>2&lt;/sup>&amp;frasl;&lt;sub>7&lt;/sub>&lt;/strong> is its fractional part.&lt;/p>&lt;p>We can use either an &lt;strong>improper fraction&lt;/strong> (a fraction whose numerator is greater than its denominator) or a &lt;strong>mixed number&lt;/strong> to show the same amount.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"mixed_fraction2.svg\" alt=\"\" />&lt;/p></string>
    <string name="monthly_billing">Monthly billing</string>
    <string name="navigation_about_photomath">About Photomath</string>
    <string name="navigation_clear_history">Clear history</string>
    <string name="navigation_expired">&lt;u>Photomath+&lt;/u> expired on %1$s</string>
    <string name="navigation_feedback">Help &amp; feedback</string>
    <string name="navigation_introduction">Replay introduction</string>
    <string name="navigation_show_history">Show history</string>
    <string name="navigation_start_in_camera">Start in Camera</string>
    <string name="navigation_subscribed">Plus version is unlocked.</string>
    <string name="navigation_trial">Unlocked until %1$s</string>
    <string name="navigation_trial_expired">Unlock the Plus version.</string>
    <string name="navigation_whats_new">What’s new</string>
    <string name="negative_numbers">"&lt;p>A &lt;b>&lt;font color=\"red\"> negative number&lt;/font>&lt;/b> is a number less than 0. &lt;/p>&lt;p>For example: -1, -2, -7, -25, -150… &lt;/p>&lt;p>Negative numbers lie on the left side of zero on the >b>number line.&lt;/b>&lt;/p>&lt;img class='center' src='negative_numbers.svg'/>"</string>
    <string name="negative_reciprocal">"&lt;p>To get the negative reciprocal of a &lt;strong>whole number&lt;/strong> &lt;em>n&lt;/em>, find its reciprocal &lt;em>1&amp;frasl;n&lt;/em> and flip its sign. Therefore, the negative reciprocal of a number &lt;em>n&lt;/em> is the number &lt;em>- 1&amp;frasl;n.&lt;/em>&lt;/p>&lt;p>To get the negative reciprocal of a &lt;strong>fraction&lt;/strong>, just flip the numerator and denominator of that fraction and change its sign. Therefore, the reciprocal of a fraction &lt;em>&lt;sup>a&lt;/sup>&amp;frasl;&lt;sub>b&lt;/sub>&lt;/em> is the fraction - &lt;/span>&lt;em>&lt;sup>b&lt;/sup>&amp;frasl;&lt;sub>a&lt;/sub>&lt;/em>.&lt;/p>&lt;p>&lt;strong>The number 0&lt;/strong> doesn't have a negative reciprocal.&lt;/p>"</string>
    <string name="new_math_engine">New math engine</string>
    <string name="numerator_and_denominator">"&lt;p>The &lt;strong>numerator&lt;/strong> is the top number in a fraction, and the &lt;strong>denominator&lt;/strong> is the bottom number in a fraction.&lt;/p>&lt;p>For example: in the fraction&lt;/p>&lt;p>&lt;img class='center' src='num_denom.svg'/>&lt;/p>&lt;p>the &lt;strong>&lt;font color=\"red\">number 3 is the numerator&lt;/font>&lt;/strong>, and the &lt;strong>&lt;font color=\"blue\">number 4 is the denominator&lt;/font>&lt;/strong>.&lt;/p>"</string>
    <string name="numerators">"&lt;p>The &lt;strong>numerator&lt;/strong> is the top number in a fraction, and the &lt;strong>denominator&lt;/strong> is the bottom number in a fraction.&lt;/p>&lt;p>For example: in the fraction&lt;/p>&lt;p>&lt;img class='center' src='num_denom.svg'/>&lt;/p>&lt;p>the &lt;strong>&lt;font color=\"red\">number 3 is the numerator&lt;/font>&lt;/strong>, and the &lt;strong>&lt;font color=\"blue\">number 4 is the denominator&lt;/font>&lt;/strong>.&lt;/p>"</string>
    <string name="numerators_and_denominators">"&lt;p>The &lt;strong>numerator&lt;/strong> is the top number in a fraction, and the &lt;strong>denominator&lt;/strong> is the bottom number in a fraction.&lt;/p>&lt;p>For example: in the fraction&lt;/p>&lt;p>&lt;img class='center' src='num_denom.svg'/>&lt;/p>&lt;p>the &lt;strong>&lt;font color=\"red\">number 3 is the numerator&lt;/font>&lt;/strong>, and the &lt;strong>&lt;font color=\"blue\">number 4 is the denominator&lt;/font>&lt;/strong>.&lt;/p>"</string>
    <string name="opposite_opposite">&lt;p>&lt;font color=\"red\">&lt;b>The opposite&lt;/b>&lt;/font> of a number &lt;i>n&lt;/i> is a number &lt;i>-n&lt;/i>. To get the opposite, change the sign of the number. &lt;/p>&lt;p>Adding the opposite of any number to the number itself equals 0.&lt;/p>&lt;p>For example: The opposite of &lt;font color=\"red\">&lt;b>6&lt;/b>&lt;/font> is &lt;font color=\"red\">&lt;b>-6&lt;/b>&lt;/font> and 8+(-8)=0.&lt;/p></string>
    <string name="opposite_opposites">&lt;p>&lt;font color=\"red\">&lt;b>The opposite&lt;/b>&lt;/font> of a number &lt;i>n&lt;/i> is a number &lt;i>-n&lt;/i>. To get the opposite, change the sign of the number. &lt;/p>&lt;p>Adding the opposite of any number to the number itself equals 0.&lt;/p>&lt;p>For example: The opposite of &lt;font color=\"red\">&lt;b>6&lt;/b>&lt;/font> is &lt;font color=\"red\">&lt;b>-6&lt;/b>&lt;/font> and 8+(-8)=0.&lt;/p></string>
    <string name="per_month">Per month</string>
    <string name="perfect_cube">"&lt;p>If the cube root has a radicand that can be written as a &lt;b>product of three equal expressions&lt;/b>, that radicand is called a &lt;strong>perfect cube&lt;/strong>.&lt;/p>&lt;p>To factor out the perfect cube, write the radicand as the product of two factors where one of them is a perfect cube.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='perfect_cube.svg' alt='' />&lt;/p>&lt;p>we wrote the number 108 as a product of 27 and 4 because the number 27 is a perfect cube.&lt;/p>"</string>
    <string name="perfect_root">"&lt;p>If the root with the index &lt;em>n&lt;/em> has a radicand that can be written as a &lt;b>product of &lt;em>n&lt;/em> equal expressions&lt;/b>, that radicand is called a &lt;strong>perfect root&lt;/strong>.&lt;/p>&lt;p>To factor out the perfect root, write the radicand as the product of two factors where one of them is a perfect root.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='perfect_root.svg' alt='' />&lt;/p>&lt;p>we wrote the number 48 as a product of 16 and 3 because the number 16 is a perfect root.&lt;/p>"</string>
    <string name="perfect_square">"&lt;p>If the square root has a radicand that can be written as a &lt;b>product of two equal expressions&lt;/b>, that radicand is called a &lt;strong>perfect square&lt;/strong>.&lt;/p>&lt;p>To factor out the perfect square, write the radicand as the product of two factors where one of them is a perfect square.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='perfect_square.svg' alt='' />&lt;/p>&lt;p>we wrote the number 75 as a product of 25 and 3 because the number 25 is a perfect square.&lt;/p>"</string>
    <string name="photomath_plus_expired_on">Expired on %1$s</string>
    <string name="photomath_plus_extend_gift_text">A gift for you</string>
    <string name="photomath_plus_extend_message">%1$S extra months of photomath+</string>
    <string name="photomath_plus_is_here">Photomath+ is here</string>
    <string name="photomath_plus_unlocked_until">photomath+ unlocked until %1$S</string>
    <string name="photomath_plus_update_latest">Update to the latest version of Photomath to access these features and more</string>
    <string name="plus_dialog_colorful_explanations">Colorful explanations</string>
    <string name="plus_dialog_explanations_move_constant">&lt;b>&lt;u>&lt;font color=#0DA2CC>Move constant&lt;/font>&lt;/u>&lt;/b> to the right and…</string>
    <string name="plus_dialog_extra_knowledge">Extra math knowledge</string>
    <string name="plus_dialog_magnify_move_constant">Move constant to…</string>
    <string name="plus_dialog_magnify_move_variable_to">Move variable to…</string>
    <string name="plus_dialog_magnify_text">Complete step-by-step instructions</string>
    <string name="plus_dialog_sometimes_we_will">Sometimes we will need to &lt;b>&lt;font color=#BF0C34>rearrange a formula&lt;/font>&lt;/b> to more easily find the value of the &lt;b>&lt;font color=#4c4f54>subject&lt;/font>&lt;/b>…</string>
    <string name="plus_improve_grades">Improve your grades with step-by-step instructions</string>
    <string name="plus_in_front_of_parenthesis">"&lt;p>&lt;strong style=\"color: #ff0000;\">The plus sign&lt;/strong> &lt;em>doesn't&lt;/em> change the sign of the expression inside the parenthesis.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"plus_sign_parenthesis.svg\" alt=\"\" />&lt;/p>&lt;p>&lt;img class=\"center\" src=\"plus_sign_parenthesis_x.svg\" alt=\"\" />&lt;/p>"</string>
    <string name="plus_learn_better">Learn better with colorful explanations</string>
    <string name="plus_master_math">Master math with tips &amp; tricks</string>
    <string name="plus_solve_millions">Solve millions of problems instantly</string>
    <string name="positive_numbers">"&lt;p>A &lt;b>&lt;font color=\"blue\">positive number&lt;/font>&lt;/b> is a number greater than 0.&lt;/p>&lt;p>For example: 1, 2, 5, 21, 100… &lt;/p>&lt;p>Positive numbers lie on the right side of zero on the &lt;b>number line.&lt;/b>&lt;/p> &lt;img class='center' src='positive_numbers.svg'/>"</string>
    <string name="power">&lt;p>An expression that represents repeated multiplication of the same factor is called a &lt;strong style=\"color: #ff0000;\">power&lt;/strong>.&lt;/p>&lt;p>For example: 10&lt;sup>3&lt;/sup>&lt;/p>&lt;p>The 10 in the expression 10&lt;sup>3&lt;/sup> is called the &lt;strong style=\"color: #ff0000;\">base&lt;/strong>, and the number 3 is called the &lt;strong style=\"color: #ff0000;\">exponent&lt;/strong>. The base tells what number or expression is being multiplied and the exponent tells us how many times is the base being multiplied.&lt;/p>&lt;p>Therefore, we calculate 10&lt;sup>3&lt;/sup> as 10&amp;middot;10&amp;middot;10 which equals 1000.&lt;/p></string>
    <string name="product_of_prime_numbers">&lt;p>&lt;strong style=\"color: #ff0000;\">Any number&lt;/strong> can be written as a product of &lt;strong>prime numbers&lt;/strong>.&lt;/p>&lt;p>First find the prime numbers that are &lt;strong>factors&lt;/strong> of the given number, then write the given number as &lt;strong>a product of the found prime factors&lt;/strong>.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>The number 14. Prime numbers:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"product_of_prime_numb1.svg\" alt=\"\" />&lt;/p></string>
    <string name="prompt_explain">Would you care to explain?</string>
    <string name="prompt_glad">Glad to hear it!</string>
    <string name="prompt_helpful">Was this solution helpful?</string>
    <string name="prompt_improving">We’re constantly working on improving Photomath</string>
    <string name="prompt_rate">Care to rate Photomath?</string>
    <string name="prompt_respect">Ok, we can respect that ☺︎</string>
    <string name="prompt_tell_friends">Tell friends about Photomath</string>
    <string name="prompt_thanks">Thanks for your help!</string>
    <string name="prompt_wont_ask">Ok, we won’t ask again!</string>
    <string name="radical">&lt;p>&lt;strong style=\"color: #ff0000;\">The radical &lt;/strong> (&amp;radic;) is simplified when the radicand has no perfect factors. A &lt;strong>perfect factor&lt;/strong> is a factor that makes a perfect root based on the index of the radical.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"radical1.svg\" alt=\"\" />&lt;/p>&lt;p>3&lt;sup>3&lt;/sup> is a perfect factor.&lt;/p>&lt;p>Therefore,&lt;/p>&lt;p>&lt;img class=\"center\" src=\"radical2.svg\" alt=\"\" />&lt;/p>&lt;p>To reduce the index of the radical and the exponent, find the &lt;strong>greatest common divisor&lt;/strong> &lt;em>n&lt;/span>&lt;/em> of the index and exponent and &lt;strong>divide both of them by&lt;/strong> &lt;strong>&lt;em>n&lt;/em>&lt;/strong>.&lt;/p>&lt;p>Here in the example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"radical3.svg\" alt=\"\" />&lt;/p>&lt;p>we divided the index and exponent by the &lt;strong>greatest common divisor 2&lt;/strong>.&lt;/p></string>
    <string name="radicand">&lt;p>&lt;strong style=\"color: #ff0000;\">The radicand&lt;/strong> is any expression inside the radical symbol (&amp;radic;) or the expression whose root is being considered.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"radicand1.svg\" alt=\"\" />&lt;/p>&lt;p>Where &lt;em>k&lt;/em> is the radicand, and the number &lt;em>n&lt;/em>, above the radical, is called &lt;strong>index&lt;/strong>.&lt;/p>&lt;p>If the index of a radicand is odd and greater than 1, the sign of the solution is the same as the sign of the given radicand.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"radicand.svg\" alt=\"\" />&lt;/p></string>
    <string name="rationalize">&lt;p>When the denominator of a fraction has a radical, the &lt;strong style=\"color: #ff0000;\">rationalization&lt;/strong> of that fraction has to be done.&lt;/p>&lt;p>It is a process by which the radical in the denominator of a fraction is written as a fraction with the rational denominator. To do that, &lt;strong>multiply both the numerator and denominator by a radical&lt;/strong> that makes the denominator &lt;strong>radical term perfect&lt;/strong> so that it can be simplified.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"rationalization.svg\" alt=\"\" />&lt;/p></string>
    <string name="reciprocal">"&lt;p>To get the reciprocal of a &lt;strong>whole number&lt;/strong>, divide 1 by that number. Therefore, the reciprocal of a number &lt;em>n&lt;/em> is the number &lt;em>&lt;sup>1&lt;/sup>&amp;frasl;&lt;sub>n&lt;/sub>&lt;/em>&lt;/em>.&lt;/p>&lt;p>To get the reciprocal of a &lt;strong>fraction&lt;/strong>, just flip the numerator and denominator of that fraction. Therefore, the reciprocal of a fraction &lt;em>&lt;sup>a&lt;/sup>&amp;frasl;&lt;sub>b&lt;/sub>&lt;/em> is the fraction&lt;em> &lt;sup>b&lt;/sup>&amp;frasl;&lt;sub>a&lt;/sub>&lt;/em>.&lt;/p>&lt;p>&lt;strong>The number 0&lt;/strong> doesn't have a reciprocal.&lt;/strong>&lt;/p>"</string>
    <string name="reciprocal_of_the_coefficient">"&lt;p>To get the reciprocal of a &lt;strong style=\"color: #ff0000;\">whole number&lt;/strong>, divide 1 by that number. Therefore, the reciprocal of a number &lt;strong>n&lt;/strong> is the number &lt;strong>1&amp;frasl;n&lt;/strong>.&lt;/p>&lt;p>To get the reciprocal of a &lt;strong style=\"color: #ff0000;\">fraction&lt;/strong>, just flip the numerator and denominator of that fraction. Therefore, the reciprocal of a fraction &lt;strong>a&amp;frasl;b&lt;/strong> is the fraction &lt;strong>b&amp;frasl;a&lt;/strong>.&lt;/p>&lt;p>&lt;strong style=\"color: #ff0000;\">The number 0&lt;/strong>  doesn't have a reciprocal.&lt;/p>"</string>
    <string name="reduce_the_fraction">&lt;p>The fraction 1&amp;frasl;2 is equal to 2&amp;frasl;4, 3&amp;frasl;6,… Therefore, we can reduce every fraction to its lowest terms. &lt;/p>&lt;p>&lt;img class=\"center\" src=\"reduce_fraction1.svg\" alt=\"\" />&lt;/p>&lt;p>Find the &lt;strong>greatest common divisor &lt;/strong>&lt;em>n&lt;/em> of the numerator and denominator and &lt;strong>divide both of them by &lt;/strong>&lt;strong>&lt;em>n&lt;/em>. &lt;/strong>&lt;/p>&lt;/p>&lt;p>For example:&lt;/p>&lt;p> &lt;img class=\"center\" src=\"reduce_fraction2.svg\" alt=\"\" />&lt;/p>&lt;p>We reduced the fraction 5&amp;frasl;20 with the number 5 to its lowest terms.&lt;/p></string>
    <string name="repeated_addition_as_multiplication">&lt;p>Multiplication means, having a certain number of &lt;strong>groups&lt;/strong> of the &lt;strong>same size.&lt;/strong>&lt;/p>&lt;p>For example:&lt;/p>&lt;p>Mr. X has 3 bags (groups) with 4 apples inside each bag. How many apples does Mr. X have?&lt;/p>&lt;p>We have &lt;strong>3&amp;nbsp;groups&lt;/strong>, and each group has &lt;strong>4 apples.&lt;/strong>&lt;/p>&lt;p>3&amp;nbsp;&amp;middot; 4 = 12&lt;/p>&lt;p>We can also solve this by &lt;strong>adding&lt;/strong>:&lt;/p>&lt;p>/p>&lt;p>&lt;/p>&lt;p>&lt;/p>&lt;p>3 times 4 apples = 4 + 4 + 4 = 12 apples.&lt;/p>&lt;p>Therefore, &lt;strong>multiplication can be written&lt;/strong> &lt;strong>as repeated addition&lt;/strong>.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img src=\"repeated_addition1.svg\" alt=\"\" />&lt;/p>&lt;p>&lt;img src=\"repeated_addition2.svg\" alt=\"\" />&lt;/p></string>
    <string name="replay_intro">Replay intro</string>
    <string name="result_alternative_form">Alternative form</string>
    <string name="rule_of_sarrus">"&lt;p>&lt;strong style='color: #ff0000;'>The rule of Sarrus&lt;/strong> is a method used to solve 3x3 determinants.&lt;/p>&lt;p>Write out the first &lt;strong>2&lt;/strong> columns of the matrix to the right of the 3rd column, so that you have 5 columns in a row.&lt;/p>&lt;p>Then add the products of the diagonals going from top to bottom and subtract the products of the diagonals going from bottom to top.&lt;/p>&lt;p>&lt;img class='center' src='rule_of_sarrus1.svg' alt='' />&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='rule_of_sarrus2.svg' alt='' />&lt;/p>"</string>
    <string name="rules_of_division">"&lt;p>Perform all divisions, working &lt;b> from left to right.&lt;/b>&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='division_rules.svg'/>&lt;/p>"</string>
    <string name="rules_of_multiplication">"&lt;p>Perform all multiplications working &lt;b>from left to right.&lt;/b>&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='multiplication_rules.svg'/>&lt;/p>"</string>
    <string name="rules_of_multiplication_and_division">"&lt;p>Perform all multiplications and divisions, working &lt;b>from left to right.&lt;/b>&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='multiplication_division_rules.svg'/>&lt;/p>"</string>
    <string name="share">Share...</string>
    <string name="share_error">Cannot perform action on empty result</string>
    <string name="share_link">Share Photomath URL</string>
    <string name="share_link_error">Could not retrieve share link</string>
    <string name="share_link_subject">Check out Photomath</string>
    <string name="show_less">Show less</string>
    <string name="show_more">Show more</string>
    <string name="smartest_step_by_step">With the smartest step-by-step instructions yet!</string>
    <string name="square_root">&lt;p>&lt;strong style=\"color: #ff0000;\">The square root&lt;/strong> of a number &lt;em>n&lt;/em> is a number &lt;em>x&lt;/em> such that x&lt;sup>2&lt;/sup> = n. In other words, the square root of a number &lt;em>n&lt;/em> is a value that, when multiplied by itself, gives the number &lt;em>n.&lt;/em>&lt;/p>&lt;p>For example:&lt;/p>&lt;p style=\"text-align: center;\">5 &amp;middot;5 = 25, therefore 5 is a square root of 25.&lt;/p>&lt;p>Note: -5 &amp;middot;(-5) = 25 too, so -5 is also a square root of 25. Every non-negative real number &lt;em>n&lt;/span>&lt;/em> has a unique non-negative square root, called &lt;strong>the principal square root&lt;/strong> written as&lt;/p>&lt;p style=\"text-align: center;\">&lt;strong>&amp;radic;n&lt;/strong>&lt;/p>&lt;p style=\"text-align: left;\">&amp;radic; is called the &lt;strong style=\"color: #ff0000;\">radical sign or radix&lt;/strong> and the number whose root is being considered is called the &lt;strong style=\"color: #ff0000;\">radicand&lt;/strong>. Note: the expression \"the square root\" is often used to refer to the principal square root. Therefore, &amp;radic;9 = 3 which is non-negative.&lt;/p></string>
    <string name="step_abs">Calculate the absolute value</string>
    <string name="step_abs_const_long">Since ARG1, the absolute value of ARG2 is ARG3</string>
    <string name="step_abs_real">The absolute value of any number is always a non-negative number</string>
    <string name="step_add">Add the numbers</string>
    <string name="step_add_real_clever">To make the calculation easier, first add the numbers that sum to multiples of 10</string>
    <string name="step_add_sign_sub">Keep the sign of the number with the larger absolute value and subtract the smaller absolute value from the larger</string>
    <string name="step_add_with_zero">When adding or subtracting 0, the quantity does not change</string>
    <string name="step_boolean_not_true">not true</string>
    <string name="step_boolean_true">true</string>
    <string name="step_calculate">Calculate the approximate value</string>
    <string name="step_compare_change_ineq_sign">Multiply both sides of the inequality by -1 and reverse the inequality sign</string>
    <string name="step_compare_check_eq">Check the equality</string>
    <string name="step_compare_check_ineq">Check the inequality</string>
    <string name="step_compare_eq_eq">The equality is true because both sides are identical</string>
    <string name="step_compare_eq_neq">The equality is false because the left and right side are different</string>
    <string name="step_compare_frac_cross">To cross-multiply the fractions, multiply the denominator of one fraction with the numerator of the other fraction</string>
    <string name="step_compare_frac_cross_call">Cross-multiply and rewrite the inequality sign</string>
    <string name="step_compare_frac_cross_call_eq">Cross-multiply</string>
    <string name="step_compare_frac_den">When comparing fractions with like numerators, compare denominators but flip the inequality sign</string>
    <string name="step_compare_frac_den_eq">When comparing fractions with like numerators, compare denominators</string>
    <string name="step_compare_frac_nom">When comparing fractions with like denominators, compare numerators</string>
    <string name="step_compare_ineq">Check if the inequality is true or false</string>
    <string name="step_compare_ineq_eq">The inequality is true because both sides are identical</string>
    <string name="step_compare_ineq_neq">The inequality is false because both sides are identical</string>
    <string name="step_compare_pos_neg">A negative number is always less than a positive number</string>
    <string name="step_compare_solve_eq">Simplify the equality</string>
    <string name="step_compare_solve_ineq">Simplify the inequality</string>
    <string name="step_compare_zero_neg">All negative numbers are less than 0</string>
    <string name="step_compare_zero_pos">All positive numbers are greater than 0</string>
    <string name="step_dec_to_frac">Convert the decimal number into a fraction</string>
    <string name="step_delete_row">Remove the unnecessary row</string>
    <string name="step_derivation_chain">Using the Chain rule ARG1, solve derivative</string>
    <string name="step_derivation_chain_where">Using the Chain rule ARG2, where ARG3 = ARG1, solve derivative</string>
    <string name="step_derivation_const">The derivative of a constant is always 0</string>
    <string name="step_derivation_log_base">Rewrite the expression using ARG1</string>
    <string name="step_derivation_prod">Calculate the derivative of the product</string>
    <string name="step_derivation_quot">Calculate the derivative of the quotient</string>
    <string name="step_derivation_sum">Calculate the derivative of the sum or difference</string>
    <string name="step_derivation_table_desc">Using ARG1, solve derivative</string>
    <string name="step_derivation_var">The derivative of the variable is always 1</string>
    <string name="step_derive">Calculate the derivative</string>
    <string name="step_derive_recursive">Calculate the derivative of the composite function</string>
    <string name="step_det2_calc">Calculate the determinant</string>
    <string name="step_det2_determinant_rule">Solve the determinant using the formula ARG1</string>
    <string name="step_det3_calc">Calculate the determinant</string>
    <string name="step_det3_extend_grid">"Extend the determinant's grid by rewriting the first two columns of numbers"</string>
    <string name="step_det3_sarrus_rule">Using the rule of Sarrus, add the products of the main diagonals going from top to bottom and subtract the products of the diagonals going from bottom to top</string>
    <string name="step_det4_calc">Calculate the determinant</string>
    <string name="step_det4_return_to_laplace">Return the results into the Laplace expansion</string>
    <string name="step_det_laplace_rule_col">Solve the determinant using the cofactor expansion by column ARG1</string>
    <string name="step_det_laplace_rule_row">Solve the determinant using the cofactor expansion of row ARG1</string>
    <string name="step_det_zero">If an entire row or column of a matrix contains only 0, then the determinant equals 0</string>
    <string name="step_div">Divide the numbers</string>
    <string name="step_div_neg_neg">Dividing two negatives equals a positive: ARG1</string>
    <string name="step_div_neg_pos">Dividing a negative and a positive equals a negative: ARG1</string>
    <string name="step_div_num_with_den">Divide the numerator by the denominator, write the quotient as the whole part and make the remainder the new numerator ARG1 with a remainder of ARG2</string>
    <string name="step_div_pos_neg">Dividing a positive and a negative equals a negative: ARG1</string>
    <string name="step_div_to_frac">Write the division as a fraction</string>
    <string name="step_div_with_neg_one">Any expression divided by -1 equals its opposite</string>
    <string name="step_div_with_one">Any expression divided by 1 remains the same</string>
    <string name="step_div_with_self">Any expression divided by itself equals 1</string>
    <string name="step_div_with_self_neg">Any expression divided by its opposite equals - 1</string>
    <string name="step_div_with_zero">Any expression divided by 0 is undefined</string>
    <string name="step_div_zero">0 divided by any non-zero expression equals 0</string>
    <string name="step_eq_abs_as_linear">When the absolute value of ARG1 equals 0, then ARG1 equals 0</string>
    <string name="step_eq_abs_branch">Rewrite the absolute value equation as two separate equations, one positive and the other negative</string>
    <string name="step_eq_abs_no_sol">Since the left side is always non-negative, the equation has no solutions</string>
    <string name="step_eq_del_opp">Cancel equal terms on both sides of the equation</string>
    <string name="step_eq_irrational">Solve the equation for ARG1</string>
    <string name="step_eq_irrational_move">Isolate the radical on one side of the equation</string>
    <string name="step_eq_irrational_pow_sides">Rise both sides of the equation to the power of ARG1</string>
    <string name="step_eq_irrational_sol_check_msg">Check if the given values are solutions of the equation</string>
    <string name="step_eq_irrational_square_sides">Square both sides of the equation</string>
    <string name="step_eq_linear">Solve the equation for ARG1</string>
    <string name="step_eq_linear_abs">Solve the equation for ARG1</string>
    <string name="step_eq_linear_abs_find_intersection">Find the intersection</string>
    <string name="step_eq_linear_abs_separate">Separate the absolute value equation into ARG1 possible cases</string>
    <string name="step_eq_linear_abs_split">Rewrite the absolute value equation as two separate equations, one positive and the other the negative</string>
    <string name="step_eq_linear_abs_union">The solution is the union of given values</string>
    <string name="step_eq_linear_cross_simpl">Simplify the equation using cross-multiplication</string>
    <string name="step_eq_linear_div">Divide both sides of the equation by ARG1</string>
    <string name="step_eq_linear_eq_den">When the denominators are the same, set the numerators equal</string>
    <string name="step_eq_linear_eq_num">When the numerators are the same, set the denominators equal</string>
    <string name="step_eq_linear_frac_zero">When the quotient of expressions equals 0, the numerator has to be 0</string>
    <string name="step_eq_linear_neg">Change the signs on both sides of the equation</string>
    <string name="step_eq_linear_param_j_final">The final solution for ARG1 is</string>
    <string name="step_eq_linear_prop">Solve the proportion using cross-multiplication</string>
    <string name="step_eq_linear_restrictions_resolve">Exclude the solution equal to any restricted value of ARG1</string>
    <string name="step_eq_linear_restrictions_resolve_abs_msg">Check if the solution is in the defined range</string>
    <string name="step_eq_linear_restrictions_resolve_neq">If any solution equals to a restricted value, exclude it</string>
    <string name="step_eq_linear_restrictions_zero">Since all the values of ARG1 are restricted, the equation has no solution</string>
    <string name="step_eq_mul">To simplify the equation, multiply both sides by ARG1</string>
    <string name="step_eq_mul_den">To simplify the equation, multiply both sides by the common denominator ARG1</string>
    <string name="step_eq_mul_direct">Multiply both sides of the equation by ARG1</string>
    <string name="step_eq_mul_lcm">To simplify the equation, multiply both sides by the least common denominator ARG1</string>
    <string name="step_eq_mul_rec">Multiply the equation by the reciprocal of the coefficient</string>
    <string name="step_eq_pow_eq">Since the exponents are the same, the bases are equal</string>
    <string name="step_eq_quad_exp_zero">The only way an exponentiation could be 0 is when the base equals 0</string>
    <string name="step_eq_quad_formula_reorder_terms">Reorder the terms</string>
    <string name="step_eq_quad_return_substitute">Return substituted values into ARG1</string>
    <string name="step_eq_quad_substitute">Solve the 4th power equation using the substitution ARG1</string>
    <string name="step_eq_quadratic">Solve the equation for ARG1</string>
    <string name="step_eq_quadratic_restrictions_resolve">Exclude the solution equal to any restricted value of ARG1</string>
    <string name="step_eq_quadratic_restrictions_resolve_neq">If any solution equals to a restricted value, exclude it</string>
    <string name="step_eq_quadratic_restrictions_zero">Since all the values of ARG1 are restricted, the equation has no solution</string>
    <string name="step_eq_root">Take the root of both sides of the equation</string>
    <string name="step_exp_eq_call">Solve the equation for ARG1</string>
    <string name="step_exp_eq_exp_equalise">Since the bases are the same, equalise the exponents</string>
    <string name="step_exp_eq_frac_as_div">Write the fraction as division</string>
    <string name="step_exp_eq_mul_same_exp">Multiply the terms with equal exponents by multiplying their bases</string>
    <string name="step_exp_eq_no_sol">The statement is false for any value of ARG1 because the exponential function is always positive</string>
    <string name="step_exp_eq_pow_separate">Using ARG1 separate the exponent</string>
    <string name="step_exp_eq_union">Find the union of the given values</string>
    <string name="step_extract">To make the calculation easier, factor the expression</string>
    <string name="step_extract_arg">Factor out ARG1 from the expression</string>
    <string name="step_extract_minus">Extract the negative sign from the expression</string>
    <string name="step_factorial_calculate">Calculate the factorial</string>
    <string name="step_factorial_expand">Using ARG1, expand the factorial</string>
    <string name="step_factorial_formula">Using ARG1, calculate the factorial</string>
    <string name="step_factorial_mul_simplify">Using ARG1, simplify the expression</string>
    <string name="step_factorial_zero">By definition ARG1</string>
    <string name="step_factorise_arg_as_sum">Write ARG1 as a sum</string>
    <string name="step_factorise_call">Factor the expression</string>
    <string name="step_factorise_cube_diff">Using ARG1, factor the expression</string>
    <string name="step_factorise_cube_sum">Using ARG1, factor the expression</string>
    <string name="step_factorise_diff_cube">Using ARG1, factor the expression</string>
    <string name="step_factorise_diff_sqr">Using ARG1, factor the expression</string>
    <string name="step_factorise_inv_diff_cube">Using ARG1, simplify the product</string>
    <string name="step_factorise_inv_diff_sqr">Using ARG1, simplify the product</string>
    <string name="step_factorise_inv_sum_cube">Using ARG1, simplify the product</string>
    <string name="step_factorise_neg_order">Extract the negative sign from the expression and reorder the terms</string>
    <string name="step_factorise_sqr_diff">Using ARG1, factor the expression</string>
    <string name="step_factorise_sqr_sum">Using ARG1, factor the expression</string>
    <string name="step_factorise_sum_cube">Using ARG1, factor the expression</string>
    <string name="step_final_form">The expression is in the final form</string>
    <string name="step_frac_add">Add the fractions</string>
    <string name="step_frac_complex_one_rec">1 divided by a fraction equals the reciprocal of that fraction</string>
    <string name="step_frac_complex_resolve">Using formula ARG1 simplify the complex fraction</string>
    <string name="step_frac_complex_resolve_call">Simplify the complex fraction</string>
    <string name="step_frac_dec_div">Divide the numbers</string>
    <string name="step_frac_div_rec">To divide by a fraction, multiply by the reciprocal of that fraction</string>
    <string name="step_frac_div_rec_neg_one">-1 divided by a fraction equals the negative reciprocal of that fraction</string>
    <string name="step_frac_div_rec_one">1 divided by a fraction equals the reciprocal of that fraction</string>
    <string name="step_frac_expand_int">Using ARG1, convert the expression into fraction</string>
    <string name="step_frac_expr_div">To divide a fraction by an expression, multiply by the reciprocal of that expression</string>
    <string name="step_frac_extract_neg">Use ARG1, to rewrite the fraction</string>
    <string name="step_frac_int_div">To divide a fraction by a number, multiply by its reciprocal</string>
    <string name="step_frac_int_mul">Calculate the product</string>
    <string name="step_frac_mul">Multiply the fractions</string>
    <string name="step_frac_mul_join">To multiply the fractions, multiply the numerators and denominators separately</string>
    <string name="step_frac_mul_num_den">Multiply the numerator and denominator by ARG1</string>
    <string name="step_frac_reduce">Reduce the fraction with ARG1</string>
    <string name="step_frac_reduce_out">Reduce the numbers with greatest common divisor ARG1</string>
    <string name="step_frac_reduce_out_eq">Reduce the numbers with ARG1</string>
    <string name="step_frac_reduce_out_expr">Reduce the expression with the greatest common divisor ARG1</string>
    <string name="step_frac_resolve_neg">Determine the sign of the fraction</string>
    <string name="step_frac_sep_n">Write the expression as a product with the factor ARG1</string>
    <string name="step_frac_simplify">Simplify the fraction</string>
    <string name="step_frac_sub">Subtract the fractions</string>
    <string name="step_frac_sum_common">Write all numerators above the least common denominator ARG1</string>
    <string name="step_frac_sum_expand">Expand the fraction to get the least common denominator</string>
    <string name="step_frac_sum_join">Write all numerators above the common denominator</string>
    <string name="step_frac_sum_solve">Calculate the sum or difference and determine the sign of the fraction</string>
    <string name="step_frac_to_dec">Convert the fraction to a decimal number</string>
    <string name="step_frac_to_mfrac">Convert the improper fraction to a mixed number</string>
    <string name="step_ineq_del_opp">Cancel equal terms on both sides of the inequation</string>
    <string name="step_ineq_final_sol_intersec">The final solution is the intersection of given values</string>
    <string name="step_ineq_intsec">Determine the intersection of the given values</string>
    <string name="step_ineq_linear">Solve the inequation for ARG1</string>
    <string name="step_ineq_linear_abs">Solve the inequality for ARG1</string>
    <string name="step_ineq_linear_abs_except_solve">Since the left side is always non-negative, the statement is true for any value of ARG1, except when ARG2</string>
    <string name="step_ineq_linear_abs_except_tr">The inequality is true for any value of ARG1 except when ARG2</string>
    <string name="step_ineq_linear_abs_frac_con">Using ARG1, rewrite the expression</string>
    <string name="step_ineq_linear_abs_frac_exp">Using ARG1, rewrite the expression</string>
    <string name="step_ineq_linear_abs_gte_zero">Since the left side is always non-negative, the statement is true for any value of ARG1</string>
    <string name="step_ineq_linear_abs_inv">To get the absolute value on the left side, switch the sides of the inequality and flip the inequality sign</string>
    <string name="step_ineq_linear_abs_lt_zero">Since the left side is always non-negative, the statement is false for any value of ARG1</string>
    <string name="step_ineq_linear_abs_lte_zero">Since the left side is always non-negative, ARG1 must equal 0</string>
    <string name="step_ineq_linear_abs_multi">To solve the inequality, separate it into two inequalities</string>
    <string name="step_ineq_linear_abs_non_neg">When the expression in absolute value is non-negative, remove the bars</string>
    <string name="step_ineq_linear_abs_restrictions_zero">Since all the values of ARG1 are restricted, the inequality has no solution</string>
    <string name="step_ineq_linear_abs_separate">Separate the absolute value inequality into ARG1 possible cases</string>
    <string name="step_ineq_linear_abs_solve_frac_gt">Since the denominator is always ARG1, the numerator has to be ARG2</string>
    <string name="step_ineq_linear_abs_solve_frac_gte">Since the denominator is always ARG1, the numerator has to be ARG2</string>
    <string name="step_ineq_linear_abs_solve_frac_lt">Since the denominator is always ARG1, the numerator has to be ARG2</string>
    <string name="step_ineq_linear_abs_solve_frac_lte">Since the denominator is always ARG1, the numerator has to be ARG2</string>
    <string name="step_ineq_linear_abs_solve_sys_gt">There are two ways the quotient ARG1 could be ARG2: ARG3 or ARG4</string>
    <string name="step_ineq_linear_abs_solve_sys_gte">"There are two ways the quotient ARG5 could be ARG8: (Use ARG1, ARG2 instead of ARG3, ARG4 for the denominator, because it can't equal 0) ARG6 or ARG7"</string>
    <string name="step_ineq_linear_abs_solve_sys_lt">There are two ways the quotient ARG1 could be ARG2: ARG3 or ARG4</string>
    <string name="step_ineq_linear_abs_solve_sys_lte">"There are two ways the quotient ARG5 could be ARG8: (Use ARG1, ARG2 instead of ARG3, ARG4 for the denominator, because it can't equal 0) ARG6 or ARG7"</string>
    <string name="step_ineq_linear_abs_split">Rewrite the absolute value inequality as two separate inequalities, one positive and the other the negative</string>
    <string name="step_ineq_linear_cross_simpl">Simplify the inequality using cross-multiplication</string>
    <string name="step_ineq_linear_div">Divide both sides of the inequation by ARG1</string>
    <string name="step_ineq_linear_div_neg">Divide both sides of the inequation by ARG1 and flip the inequality sign</string>
    <string name="step_ineq_linear_neg">Change the signs on both sides of the inequation and flip the inequality sign</string>
    <string name="step_ineq_mul">To simplify the inequation, multiply by ARG1</string>
    <string name="step_ineq_mul_den">To simplify the inequation, multiply both sides by the common denominator ARG1</string>
    <string name="step_ineq_mul_lcm">To simplify the inequation, multiply both sides by the least common denominator ARG1</string>
    <string name="step_ineq_pow_diff">The inequation is true for any value of ARG1, except when ARG2</string>
    <string name="step_ineq_pow_even_gt0">Since the left side is always non-negative, the statement is true for any value of ARG1, except when ARG2</string>
    <string name="step_ineq_pow_even_gte">Since the left side is always non-negative, the statement is true for any value of ARG1</string>
    <string name="step_ineq_pow_even_lt">Since the left side is always non-negative, the statement is false for any value of ARG1</string>
    <string name="step_ineq_pow_even_lte0">Since the left side is always ARG2, ARG1 must equal 0</string>
    <string name="step_ineq_pow_odd_zero">The only way a base raised to an odd power can be ARG1 is when the base is ARG1</string>
    <string name="step_ineq_product_np">There are two ways the product ARG4 could be ARG1: ARG2 or ARG3</string>
    <string name="step_ineq_product_np_e">There are two ways the product ARG4 could be ARG1: ARG2 or ARG3</string>
    <string name="step_ineq_product_ppnn">There are two ways the product ARG4 could be ARG1: ARG2 or ARG3</string>
    <string name="step_ineq_product_ppnn_e">There are two ways the product ARG4 could be ARG1: ARG2 or ARG3</string>
    <string name="step_ineq_quad_find_a">The left side of the inequality is always positive or negative, depending on the leading coefficient ARG1 from the related quadratic equation ARG2</string>
    <string name="step_ineq_quad_lead_neg_f">Since the leading coefficient ARG2 is negative, the left side of the inequality is always negative, therefore the the statement is false for any value of ARG1</string>
    <string name="step_ineq_quad_lead_neg_t">Since the leading coefficient ARG2 is negative, the left side of the inequality is always negative, therefore the the statement is true for any value of ARG1</string>
    <string name="step_ineq_quad_lead_pos_f">Since the leading coefficient ARG2 is positive, the left side of the inequality is always positive, therefore the the statement is false for any value of ARG1</string>
    <string name="step_ineq_quad_lead_pos_t">Since the leading coefficient ARG2 is positive, the left side of the inequality is always positive, therefore the the statement is true for any value of ARG1</string>
    <string name="step_ineq_quad_substitute">Substitute the given values of ARG1 into formula ARG2</string>
    <string name="step_ineq_quad_to_eq_quad">To get ARG1 solve the related quadratic equation</string>
    <string name="step_ineq_quotient_cnn">There is one way the quotient could be ARG2, since ARG1, the denominator also needs to be ARG3</string>
    <string name="step_ineq_quotient_cnn_e">"There is one way the quotient could be ARG2, since ARG1, the denominator alse needs to be ARG3 (Use &lt; instead of ≤ because the denominator can't be 0)"</string>
    <string name="step_ineq_quotient_cpp">There is one way the quotient could be ARG2, since ARG1, the denominator also needs to be ARG2</string>
    <string name="step_ineq_quotient_cpp_e">"There is one way the quotient could be ARG2, since ARG1, the denominator also needs to be ARG3 (Use > instead of ≥ because the denominator can't equal 0)"</string>
    <string name="step_ineq_quotient_negcpn">There is one way the quotient could be ARG2, since ARG1, the denominator needs to be ARG3</string>
    <string name="step_ineq_quotient_negcpn_e">"There is one way the quotient could be ARG2, since ARG1, the denominator needs to be ARG3 (Use > instead of ≥ because the denominator can't be 0)"</string>
    <string name="step_ineq_quotient_np_lt">There are two ways the quotient ARG4 could be ARG1: ARG2 or ARG3</string>
    <string name="step_ineq_quotient_np_lte">"There are two ways the quotient ARG4 could be ARG1: (Use >,&lt; instead of ≥,≤ for the denominator, because it can't equal 0) ARG2 or ARG3"</string>
    <string name="step_ineq_quotient_poscpn">There is one way the quotient could be ARG2, since ARG1, the denominator needs to be ARG2</string>
    <string name="step_ineq_quotient_poscpn_e">"There is one way the quotient could be ARG2, since ARG1, the denominator needs to be ARG3 (Use &lt; instead of ≤ because the denominator can't be 0)"</string>
    <string name="step_ineq_quotient_ppnn_gt">There are two ways the quotient ARG4 could be ARG1: ARG2 or ARG3</string>
    <string name="step_ineq_quotient_ppnn_gte">"There are two ways the quotient ARG4 could be ARG1: (Use >,&lt; instead of ≥,≤ for the denominator, because it can't equal 0) ARG2 or ARG3"</string>
    <string name="step_ineq_separate">To solve the inequality, separate it into two inequalities</string>
    <string name="step_ineq_union">The solution is the union of the sets</string>
    <string name="step_ineq_union_no_final">Determine the union of the given values</string>
    <string name="step_ineq_write_ineq_notation">Write the interval in inequality notation</string>
    <string name="step_integrate">Calculate the indefinite integral</string>
    <string name="step_integrate_by_parts_expand">To use the partial integration formula, expand the expression into ARG1</string>
    <string name="step_integrate_by_parts_msg">To solve the integral use partial integration formula ARG9, where ARG1, ARG2. Calculate the differential ARG7 using ARG3, calculate ARG8 using ARG4 and substitute ARG5 and ARG6</string>
    <string name="step_integrate_calc_diff">Calculate the differential using ARG1</string>
    <string name="step_integrate_def">Calculate the definite integral</string>
    <string name="step_integrate_def_bounds">To calculate the definite integral, return the limits of integration</string>
    <string name="step_integrate_def_msg">Using ARG1, calculate the expression</string>
    <string name="step_integrate_def_solve_undefined">To calculate the definite integral first calculate the indefinite integral</string>
    <string name="step_integrate_def_zero">When the limits are equal the integral equals 0</string>
    <string name="step_integrate_eq_pow">Raise both sides of the equation to the power of ARG1</string>
    <string name="step_integrate_msg">Using ARG1, solve the integral</string>
    <string name="step_integrate_msg_addc">Add the constant of integration ARG1</string>
    <string name="step_integrate_sep_frac">Separate the fraction into ARG1 fractions</string>
    <string name="step_integrate_sub_msg">Substitute ARG1 with ARG2</string>
    <string name="step_integrate_sub_msg_ret">Return substituted value ARG1</string>
    <string name="step_integrate_sub_proc_substep">Using substitution ARG1, simplify the integral</string>
    <string name="step_integrate_sub_substep">Substitute the differential using ARG1, where ARG2 and ARG3</string>
    <string name="step_log_arg_one">The logarithm of 1 with any base equals 0</string>
    <string name="step_log_base_one">Any logarithm to the base 1 is undefined</string>
    <string name="step_log_change_base_expand">Using ARG1, change the base of the logarithm</string>
    <string name="step_log_convert_number">Convert the constant into a logarithm with base ARG1</string>
    <string name="step_log_determine_values">Determine all values of ARG1 when the equation is defined</string>
    <string name="step_log_eq_no_sol_explained">The solutions are not in the defined range, therefore the equation has no solution</string>
    <string name="step_log_eq_no_sol_explained_single">The solution is not in the defined range, therefore the equation has no solution</string>
    <string name="step_log_eq_restrictions">Solve the equation for ARG1</string>
    <string name="step_log_eq_sol_intersection">The final solution is the intersection of the solution and the defined range</string>
    <string name="step_log_eq_sub">Solve the equation using substitution ARG1</string>
    <string name="step_log_eq_sub_any_sol">Since the statement is true for any value of ARG1, then it is true for every value of ARG2</string>
    <string name="step_log_eq_sub_no_sol">Since ARG1 has no solution, the original equation has no solution</string>
    <string name="step_log_eq_sub_no_sol_in_r">Since ARG1 has no solution in the set of Real Numbers, the original equation has no solution in the set of Real Numbers</string>
    <string name="step_log_eq_zero">The only way a logarithm can equal 0 is when the argument equals 1</string>
    <string name="step_log_expand_prod_rule">Using the logarithmic product rule, expand the expression</string>
    <string name="step_log_expand_quot_prod_rule">Using the logarithmic product and quotient rules, expand the expression</string>
    <string name="step_log_expand_quot_rule">Using the logarithmic quotient rule, expand the expression</string>
    <string name="step_log_express_pow">The expression ARG1 is equal to ARG2</string>
    <string name="step_log_find_values">Find all values of ARG1 that give a negative argument of the logarithm</string>
    <string name="step_log_find_values_base">Find all values of ARG1 that give a negative base or a base equal to 1</string>
    <string name="step_log_frac_power">When the numerator and denominator are raised to the same power, raise the whole fraction to that power</string>
    <string name="step_log_ineq_int_range">Find the intersection of the solution and the defined range</string>
    <string name="step_log_ineq_restrictions">Solve the inequation for ARG1</string>
    <string name="step_log_ineq_same_base">For ARG1, the expression ARG2 is equal to ARG3</string>
    <string name="step_log_ineq_same_base_ln">The expression ARG1 is equal to ARG2</string>
    <string name="step_log_ineq_separate">Separate the inequation into 2 possible cases</string>
    <string name="step_log_ineq_substitute_msg">Solve the inequation using substitution ARG1</string>
    <string name="step_log_move_both">Move the exponents to be a multiplier (ARG1 is the numerator and ARG2 is the denominator of the multiplier)</string>
    <string name="step_log_move_exp_of_arg">The exponent of the argument can be moved out front of the logarithm as a multiplier</string>
    <string name="step_log_move_exp_of_base">The reciprocal of the exponent of the base can be moved out front as a multiplier</string>
    <string name="step_log_mul_by_one">To make the calculation easier, multiply the number by 1</string>
    <string name="step_log_neg_arg">A logarithm of a negative number does not exist in set of Real Numbers</string>
    <string name="step_log_neg_base">A logarithm with a negative base does not exist in the set of Real Numbers</string>
    <string name="step_log_one_as_log">1 can be expressed as a logarithm with the same base and argument</string>
    <string name="step_log_raise_both_sides">Raise both sides of the equation to the reciprocal of the exponent</string>
    <string name="step_log_same_base">Since the bases of ​the​ logarithms are the same, the arguments are equal too</string>
    <string name="step_log_same_base_arg">A logarithm with the same base and argument equals 1</string>
    <string name="step_log_same_base_arg_ln">The natural logarithm of e equals 1</string>
    <string name="step_log_simplify_prod_rule">Using the logarithmic product rule, simplify the expression</string>
    <string name="step_log_simplify_quot_prod_rule">Using the logarithmic product and quotient rules, simplify the expression</string>
    <string name="step_log_simplify_quot_rule">Using the logarithmic quotient rule, simplify the expression</string>
    <string name="step_log_take_both_side">Take the logarithm of both sides of the equation</string>
    <string name="step_log_take_natural">Take the natural logarithm of both sides of the equation</string>
    <string name="step_log_undef_zero">The logarithm of zero is undefined</string>
    <string name="step_mat_divide_row">Divide the row by ARG1</string>
    <string name="step_mat_divide_row_element">Divide each element in the row by ARG1</string>
    <string name="step_mat_mul_row">Multiply the row by ARG1</string>
    <string name="step_mat_mul_row_element">Multiply each element in the row by ARG1</string>
    <string name="step_matrix_remove_identical">Eliminate the identical row</string>
    <string name="step_mfrac_join">Write the sum of the whole number and the fraction as a mixed number</string>
    <string name="step_mfrac_separate">Write the mixed number as a sum of the whole number and the fractional part</string>
    <string name="step_mfrac_sum_split">Add the whole numbers and fractional parts of the mixed numbers separately</string>
    <string name="step_mfrac_to_frac">Convert the mixed number to an improper fraction</string>
    <string name="step_mul">Multiply the numbers</string>
    <string name="step_mul_bracket">Distribute ARG1 through the parenthesis</string>
    <string name="step_mul_bracket_cross">Multiply the parentheses</string>
    <string name="step_mul_bracket_cross_each">Multiply each term in the first parenthesis by each term in the second parenthesis (FOIL)</string>
    <string name="step_mul_bracket_each">Multiply each term in the parenthesis by ARG1</string>
    <string name="step_mul_complex_group">Use the commutative property to regroup the factors</string>
    <string name="step_mul_neg_neg">Multiplying two negatives equals a positive: ARG1</string>
    <string name="step_mul_neg_pos">Multiplying a negative and a positive equals a negative: ARG1</string>
    <string name="step_mul_pos_neg">Multiplying a positive and a negative equals a negative: ARG1</string>
    <string name="step_mul_real_call">Use rules of multiplication and division to calculate the expression</string>
    <string name="step_mul_real_call_div">Use rules of division to calculate the expression</string>
    <string name="step_mul_real_call_mul">Use rules of multiplication to calculate the expression</string>
    <string name="step_mul_real_clever">To make the calculation easier, first calculate the product</string>
    <string name="step_mul_row_add">Multiply each element in row ARG1 by ARG2 and add that product to row ARG3</string>
    <string name="step_mul_to_pow">Write the repeated multiplication in exponential form</string>
    <string name="step_mul_with_neg_one">Any expression multiplied by -1 equals its opposite</string>
    <string name="step_mul_with_one">Any expression multiplied by 1 remains the same</string>
    <string name="step_mul_with_zero">Any expression multiplied by 0 equals 0</string>
    <string name="step_neg_neg">When there is a - sign in front of the parenthesis change the sign of each term in parenthesis</string>
    <string name="step_neg_zero">Zero does not have a sign</string>
    <string name="step_no_complex_solution">no complex solution</string>
    <string name="step_no_real_solution">no real solution</string>
    <string name="step_pos_neg">When there is a + in front of the parenthesis the expression remains the same</string>
    <string name="step_pow">Evaluate the power</string>
    <string name="step_pow_div_neg_exp">Dividing by ARG1 is the same as multiplying by ARG2</string>
    <string name="step_pow_div_to_mul">Dividing by ARG1 is the same as multiplying by ARG2</string>
    <string name="step_pow_even">A negative base raised to an even power equals a positive</string>
    <string name="step_pow_flip">Express with a positive exponent using ARG1</string>
    <string name="step_pow_flip_one">Any expression raised to the power of -1 equals its reciprocal</string>
    <string name="step_pow_frac">To raise a fraction to a power, raise the numerator and denominator to that power</string>
    <string name="step_pow_frac_flip_n">Express with a positive exponent using ARG1</string>
    <string name="step_pow_frac_flip_neg_exp_den">If a negative exponent is in the denominator, move the expression to the numerator and make the exponent positive</string>
    <string name="step_pow_frac_flip_neg_exp_num">If a negative exponent is in the numerator, move the expression to the denominator and make the exponent positive</string>
    <string name="step_pow_frac_flip_one">Express with a positive exponent using ARG1</string>
    <string name="step_pow_implicit_exp">"If a term doesn't have an exponent, it is considered that the exponent is 1"</string>
    <string name="step_pow_mul">To raise a product to a power, raise each factor to that power</string>
    <string name="step_pow_nested">Simplify the expression by multiplying exponents</string>
    <string name="step_pow_nested_mul">To raise a power to another power, multiply the exponents</string>
    <string name="step_pow_odd">A negative base raised to an odd power equals a negative</string>
    <string name="step_pow_one">1 raised to any power equals 1</string>
    <string name="step_pow_same_base_div">Divide the terms with the same base by subtracting their exponents</string>
    <string name="step_pow_same_base_mul">Multiply the terms with the same base by adding their exponents</string>
    <string name="step_pow_same_exp_div">Divide the terms with equal exponents by dividing their bases</string>
    <string name="step_pow_same_exp_mul">Multiply the terms with equal exponents by multiplying their bases</string>
    <string name="step_pow_to_same_base">Write the number in exponential form with a base of ARG1</string>
    <string name="step_pow_with_one">Any expression raised to the power of 1 equals itself</string>
    <string name="step_pow_with_zero">Any non-zero expression raised to the power of 0 equals 1</string>
    <string name="step_pow_zero">0 raised to any positive power equals 0</string>
    <string name="step_pow_zero_neg">0 raised to the power of a negative number is undefined</string>
    <string name="step_pow_zero_zero">0 raised to the power of 0 is undefined</string>
    <string name="step_product">Calculate the product</string>
    <string name="step_quad_extract">To make the calculation easier, factor the expression</string>
    <string name="step_quad_final_multi">The final solutions are</string>
    <string name="step_quad_final_single">The final solution is</string>
    <string name="step_quad_formula">Solve the quadratic equation ARG1 using ARG2</string>
    <string name="step_quad_separate">Separate the solutions</string>
    <string name="step_quad_separate_zero_product">When the product of factors equals 0, at least one factor is 0</string>
    <string name="step_quad_sqrt">Square-root both sides of the equation</string>
    <string name="step_quad_sqrt_eliz">The square root of a negative number does not exist in the set of Real Numbers</string>
    <string name="step_quad_sqrt_sides">Take the square root of both sides of the equation and remember to use both positive and negative roots</string>
    <string name="step_quotient">Calculate the quotient</string>
    <string name="step_rationalize_roots">Rationalize the denominator</string>
    <string name="step_rel_el_of_r">The statement is true for any value of ARG1</string>
    <string name="step_rel_el_of_r_eq">The statement is true for any value of ARG1, because both sides are identical</string>
    <string name="step_rel_el_of_zero">The statement is false for any value of ARG1</string>
    <string name="step_rel_el_of_zero_eq">The statement is false for any value of ARG1, because both sides are identical</string>
    <string name="step_rel_move_const">Move constant to the right side and change its sign</string>
    <string name="step_rel_move_consts">Move constants to the right side and change their signs</string>
    <string name="step_rel_move_left">Move expression to the left side and change its sign</string>
    <string name="step_rel_move_left_const">Move constant to the left and change its sign</string>
    <string name="step_rel_move_right">Move expression to the right side and change its sign</string>
    <string name="step_rel_move_root_left">Move radical to the left side and change its sign</string>
    <string name="step_rel_move_root_right">Move radical to the right side and change its sign</string>
    <string name="step_rel_move_roots">Isolate the radical on the left side of the equation</string>
    <string name="step_rel_move_roots_right">Move radicals to the right side and change their signs</string>
    <string name="step_rel_move_var">Move variable to the left side and change its sign</string>
    <string name="step_rel_move_var_right">Move the variable to the right side and change its sign</string>
    <string name="step_rel_move_vars">Move variables to the left side and change their signs</string>
    <string name="step_rel_move_vars_right">Move variables to the right and change their signs</string>
    <string name="step_rel_mul_wrapper">To simplify the inequality, multiply both sides by the common denominator ARG1</string>
    <string name="step_rel_mul_wrapper_l">To simplify the inequality, multiply both sides by the least common denominator ARG1</string>
    <string name="step_rel_restrictions">Exclude the restricted values of ARG1</string>
    <string name="step_rel_restrictions_delete_r">Find the intersection of all restrictions</string>
    <string name="step_rel_restrictions_den_zero">Find all values of ARG1 that would make the denominator equal to zero</string>
    <string name="step_rel_restrictions_div_zero">Find all values of ARG1 that would make the divisor equal to 0</string>
    <string name="step_rel_restrictions_exclude">Exclude the restricted values</string>
    <string name="step_rel_restrictions_exclude_none">There are no restricted values, so ARG1</string>
    <string name="step_rel_swap_const">Move constant to the right by adding its opposite to both sides</string>
    <string name="step_rel_swap_consts">Move constants to the right by adding their opposites to both sides</string>
    <string name="step_rel_swap_eq">To get the variable on the left side, switch the sides of the equation</string>
    <string name="step_rel_swap_eq_abs">To get the absolute value on the left side, switch the sides of the equation</string>
    <string name="step_rel_swap_ineq">To get the variable on the left side, switch the sides of the inequation and flip the inequality sign</string>
    <string name="step_rel_swap_left">Move expression to the left by adding its opposite to both sides</string>
    <string name="step_rel_swap_left_const">Move constant to the left by adding its opposite to both sides</string>
    <string name="step_rel_swap_right">Move expression to the right by adding its opposite</string>
    <string name="step_rel_swap_root_left">Move radical to the left by adding its opposite</string>
    <string name="step_rel_swap_roots_right">Move radicals to the right by adding their opposites</string>
    <string name="step_rel_swap_var">Move variable to the left by adding its opposite to both sides</string>
    <string name="step_rel_swap_var_right">Move variables to the right by adding their opposites</string>
    <string name="step_rel_swap_vars">Move variables to the left by adding their opposites to both sides</string>
    <string name="step_rel_swap_vars_right">Move variables to the right by adding their opposites</string>
    <string name="step_remove_bracket">Remove unnecessary parenthesis</string>
    <string name="step_resolve_neg_neg">Multiplying an odd number of negative factors equals a negative</string>
    <string name="step_resolve_neg_pos">Multiplying an even number of negative factors equals a positive</string>
    <string name="step_root">Calculate the root</string>
    <string name="step_root2_sqr">When a square root of an expression is multiplied by itself, the result is that expression</string>
    <string name="step_root_cube">Calculate the cube root</string>
    <string name="step_root_div">The quotient of roots with the same index is equal to the root of the quotient</string>
    <string name="step_root_frac_each">To take a root of a fraction, take the root of the numerator and denominator separately</string>
    <string name="step_root_mul">The product of roots with the same index is equal to the root of the product</string>
    <string name="step_root_mul_each">The root of a product is equal to the product of the roots of each factor</string>
    <string name="step_root_odd_minus">An odd root of a negative radicand is always a negative</string>
    <string name="step_root_one">Any root of 1 equals 1</string>
    <string name="step_root_partial">Simplify the radical</string>
    <string name="step_root_partial_split">Factor out the greatest perfect root factor</string>
    <string name="step_root_partial_split2">Factor out the perfect square</string>
    <string name="step_root_partial_split3">Factor out the perfect cube</string>
    <string name="step_root_pow_in">Using ARG1, rewrite the root</string>
    <string name="step_root_pow_out">Using ARG1, rewrite the root</string>
    <string name="step_root_reduce">Reduce the index of the radical and exponent with ARG1</string>
    <string name="step_root_sep_n">Write the root as a product with the factor ARG1</string>
    <string name="step_root_square">Calculate the square root</string>
    <string name="step_root_zero">Any root of 0 equals 0</string>
    <string name="step_row_elim_out">Multiply row ARG1 by ARG2 and add it to row ARG3</string>
    <string name="step_sign_find">Find the sign of the expression</string>
    <string name="step_sign_simp_gtz">The sign of an expression greater than 0 is always 1</string>
    <string name="step_sign_simp_ltz">The sign of an expression less than 0 is always -1</string>
    <string name="step_sign_simp_z">The sign of an expression equal to 0 is always 0</string>
    <string name="step_simplify">Simplify the expression</string>
    <string name="step_simplify_light">Simplify the expression</string>
    <string name="step_sub">Subtract the numbers</string>
    <string name="step_sub_with_self">The sum of two opposites equals 0</string>
    <string name="step_sub_with_self_del">Eliminate the opposites</string>
    <string name="step_sum">Calculate the sum or difference</string>
    <string name="step_sum_real_call">Use addition and subtraction rules to calculate the expression</string>
    <string name="step_sum_real_negative">Calculate the sum of the negative numbers</string>
    <string name="step_sum_real_positive">Calculate the sum of the positive numbers</string>
    <string name="step_sum_suffix">Collect the like terms</string>
    <string name="step_sum_suffix_add">Collect the like terms</string>
    <string name="step_sum_suffix_add_detail">Collect the like terms by adding their coefficients</string>
    <string name="step_sum_suffix_add_neg_one">"If a negative term doesn't have a coefficient, it is considered that the coefficient is -1"</string>
    <string name="step_sum_suffix_add_one">"If a term doesn't have a coefficient, it is considered that the coefficient is 1"</string>
    <string name="step_sum_suffix_del_neg_one">"When the term has a coefficient of -1, the number doesn't have to be written, but the sign remains"</string>
    <string name="step_sum_suffix_del_one">"When the term has a coefficient of 1, it doesn't have to be written"</string>
    <string name="step_sum_suffix_detail">Collect like terms by calculating the sum or difference of their coefficients</string>
    <string name="step_sum_suffix_sub">Collect the like terms</string>
    <string name="step_sum_suffix_sub_detail">Collect the like terms by subtracting their coefficients</string>
    <string name="step_sum_to_product">Write the repeated addition as multiplication</string>
    <string name="step_system_2x2_add">Add the two equations</string>
    <string name="step_system_2x2_any_sol">The statement is true for any value of ARG1 and ARG2 that satisfy both equations from the system. Therefore,the solution in parametric form is</string>
    <string name="step_system_2x2_any_sol_fin">Substitute the given value in the ordered pair ARG1</string>
    <string name="step_system_2x2_any_sol_init">To get the parametric solution isolate ARG1 from the equation</string>
    <string name="step_system_2x2_case_separate">Separate the system of equations into 4 possible cases</string>
    <string name="step_system_2x2_check">Check if the given ordered pair is the solution of the system of equations</string>
    <string name="step_system_2x2_check_f">The ordered pair is not the solution of the system of equations since at least one of the equation is false</string>
    <string name="step_system_2x2_check_f_pl">The ordered pairs are not the solution of the system of equations since at least one of the equation is false</string>
    <string name="step_system_2x2_check_pl">Check if the given ordered pairs are the solutions of the system of equations</string>
    <string name="step_system_2x2_check_t">The ordered pair is the solution of the system of equations since both equations are true</string>
    <string name="step_system_2x2_check_t_pl">The ordered pairs are the solutions of the system of equations since the equations are true</string>
    <string name="step_system_2x2_equalise">Since both equations ARG3 and ARG4 are equal to ARG1, set them equal to each other forming an equation in ARG2</string>
    <string name="step_system_2x2_no_sol">The statement is false for any value of ARG1 and ARG2, therefore the system of equations has no solution</string>
    <string name="step_system_2x2_quad_rewrite">Rewrite the changed system</string>
    <string name="step_system_2x2_res">The solution of the system is the ordered pair ARG1</string>
    <string name="step_system_2x2_res_pl">The solutions of the system are the ordered pairs ARG1</string>
    <string name="step_system_2x2_substitute_vars">To make the calculation easier, substitute ARG1 = ARG3, ARG2 = ARG4</string>
    <string name="step_system_2x2_sum">Sum the equations vertically to eliminate at least one variable</string>
    <string name="step_system_2x2_ver">Simplify the equations</string>
    <string name="step_system_3x3_check_f">"The ordered triple isn't the solution of the system of equations since it does not make all the equations true"</string>
    <string name="step_system_3x3_check_sol">Check if the given ordered triple is a solution of the system of equations</string>
    <string name="step_system_3x3_check_t">The ordered triple is the solution of the system of equations since the equations are true</string>
    <string name="step_system_3x3_cramer_solve">The solutions are ARG1 = ARG4, ARG2 = ARG5, ARG3 = ARG6</string>
    <string name="step_system_3x3_invalid">Two equations have identical left sides, but equal different numbers, therefore the system does not have a solution</string>
    <string name="step_system_3x3_no_sol">The statement is false for any value of ARG1, ARG2 and ARG3, so there is no solution</string>
    <string name="step_system_3x3_no_sol_sub">Since the system with substituted variable has no solution, the original system has no solution</string>
    <string name="step_system_3x3_sol">The solution of the system is the ordered triple (ARG1, ARG2, ARG3)</string>
    <string name="step_system_3x3_substitute_vars">To make the calculation easier, substitute ARG1 = ARG4, ARG2 = ARG5, ARG3 = ARG6</string>
    <string name="step_system_4x4_check_f">The ordered 4-tuple is not the solution of the system of equations</string>
    <string name="step_system_4x4_check_sol">Check if the given ordered 4-tuple is a solution of the system of equations</string>
    <string name="step_system_4x4_check_t">The ordered 4-tuple is the solution of the system of equations</string>
    <string name="step_system_4x4_cramer_solve">The solutions are ARG1 = ARG5, ARG2 = ARG6, ARG3 = ARG7, ARG4 = ARG8</string>
    <string name="step_system_4x4_no_sol">The statement is false for any value of ARG1, ARG2, ARG3 and ARG4</string>
    <string name="step_system_4x4_sol">The solution of the system is the ordered 4-tuple (ARG1, ARG2, ARG3, ARG4)</string>
    <string name="step_system_4x4_substitute_vars">To make the calculation easier, substitute ARG1 = ARG5, ARG2 = ARG6, ARG3 = ARG7, ARG4 = ARG8</string>
    <string name="step_system_convert_mat_to_eq">Convert the augmented matrix into a system of linear equations</string>
    <string name="step_system_cramer_rule">"Solve the system of equations using the Cramer's rule"</string>
    <string name="step_system_gauss_jordan">Solve the system of linear equations using the Gauss-Jordan method</string>
    <string name="step_system_remove_double_eq">Remove the repeated equation</string>
    <string name="step_system_remove_double_ineq">Remove the repeated inequation</string>
    <string name="step_system_return_substitution">Replace variables using the original substitution</string>
    <string name="step_system_return_substitution_no_sol">Since the system with substituted variables has no solution, the original system has no solution</string>
    <string name="step_system_sol_remove_identical">Remove the repeated solution</string>
    <string name="step_system_solve">Solve the system of equations</string>
    <string name="step_system_sub_smart">Substitute the given value of ARG1 into the simplest equation ARG2</string>
    <string name="step_system_sub_smart_quad">Substitute the given values of ARG1 into the equation ARG2</string>
    <string name="step_system_substitute_value">Substitute the given value of ARG1 into the equation ARG2</string>
    <string name="step_system_ver">Simplify the equalities</string>
    <string name="step_trig_arcus">Using a trigonometric values table, find the angle value of ARG1</string>
    <string name="step_trig_arcus_undef">The value of ARG1 is undefined</string>
    <string name="step_trig_convert_deg_to_rad">Using ARG1, convert the angle to radian measure</string>
    <string name="step_trig_convert_formula">Using ARG1, convert the angle to degree measure</string>
    <string name="step_trig_convert_radians">Convert the angle from radians to degrees</string>
    <string name="step_trig_eq">Solve the equation for ARG1</string>
    <string name="step_trig_eq_div">Divide the equation by ARG1</string>
    <string name="step_trig_eq_fun_period">Since the ARG1 is periodic, add the period of ARG2, ARG3, to find all solutions</string>
    <string name="step_trig_eq_interval">Since ARG1, the equation has no solutions</string>
    <string name="step_trig_eq_interval1">Since ARG1, the equation has no solutions in the set of Real Numbers</string>
    <string name="step_trig_eq_isolate">To isolate ARG1, use the inverse trigonometric function</string>
    <string name="step_trig_eq_linear">Solve the equation for ARG1</string>
    <string name="step_trig_eq_linear_solve">Solve the equation for ARG1</string>
    <string name="step_trig_eq_move">Move expression to the right side and change its sign</string>
    <string name="step_trig_eq_positive_angle">Find the smallest positive coterminal angle</string>
    <string name="step_trig_eq_positive_period">Since ARG2, then ARG1</string>
    <string name="step_trig_eq_quad">Solve the equation for ARG1</string>
    <string name="step_trig_eq_quad_ret">Convert using the original substitution ARG1</string>
    <string name="step_trig_eq_quad_solve">Solve the equation for ARG1</string>
    <string name="step_trig_eq_quad_subs">Solve the trigonometric equation using the substitution ARG1</string>
    <string name="step_trig_eq_two_sollutions_cos">Since ARG1, the equation has two solutions</string>
    <string name="step_trig_eq_two_sollutions_sin">Since ARG1, the equation has two solutions</string>
    <string name="step_trig_eq_union">Find the union of the solutions</string>
    <string name="step_trig_err_undef">The value of ARG1 is undefined</string>
    <string name="step_trig_neg">Simplify the expression using the symmetry of trigonometric functions</string>
    <string name="step_trig_table">Using the trigonometric values table, calculate the expression</string>
    <string name="step_trig_to_table_value_fun">Rewrite the angle as a sum</string>
    <string name="step_trigonometry">Calculate the trigonometric value</string>
    <string name="step_undefined">undefined</string>
    <string name="step_using_convert">Using ARG1, convert the expression</string>
    <string name="step_using_expand">Using ARG1, expand the expression</string>
    <string name="step_using_sim">Using ARG1, simplify the expression</string>
    <string name="step_using_trans">Using ARG1, transform the expression</string>
    <string name="step_var_exp_order">Rewrite the equation by isolating the absolute value terms on the left</string>
    <string name="step_var_order">Use the commutative property to reorder the terms</string>
    <string name="step_write_as_exp">Write the expression in exponential form</string>
    <string name="step_write_as_exp_arg">Write the expression in exponential form with an exponent of ARG1</string>
    <string name="step_write_as_primes">Write the number as a product of prime numbers</string>
    <string name="step_write_as_sum">Write ARG1 as a sum</string>
    <string name="steps">Steps</string>
    <string name="steps_menu_edit_problem">Edit problem</string>
    <string name="steps_menu_other_options">Other options appear here when available…</string>
    <string name="steps_menu_report_solution">Report solution</string>
    <string name="steps_problem_loading">There was a problem loading the result, please try again later</string>
    <string name="tap_for_explanation">TAP for more detailed steps and explanation</string>
    <string name="term_absolute_value">absolute value</string>
    <string name="term_addition_and_subtraction_rules">addition and subtraction rules</string>
    <string name="term_argument">argument</string>
    <string name="term_base">base</string>
    <string name="term_base_and_argument">base and argument</string>
    <string name="term_coefficient">coefficient</string>
    <string name="term_coefficients">coefficients</string>
    <string name="term_common_denominator">common denominator</string>
    <string name="term_complex_fraction">complex fraction</string>
    <string name="term_constant">constant</string>
    <string name="term_constants">constants</string>
    <string name="term_cramers_rule">"Cramer's rule"</string>
    <string name="term_cross_multiplication">cross-multiplication</string>
    <string name="term_cross_multiply">cross-multiply</string>
    <string name="term_cube_root">cube root</string>
    <string name="term_denominators">denominators</string>
    <string name="term_equal_terms">equal terms</string>
    <string name="term_exponent">exponent</string>
    <string name="term_exponential_form">exponential form</string>
    <string name="term_extract">extract</string>
    <string name="term_factor">factor</string>
    <string name="term_gauss_jordan_method">Gauss-Jordan method</string>
    <string name="term_greatest_common_divisor">greatest common divisor</string>
    <string name="term_greatest_common_factor">greatest common factor</string>
    <string name="term_improper_fraction">improper fraction</string>
    <string name="term_laplace_expansion">laplace expansion</string>
    <string name="term_least_common_denominator">least common denominator</string>
    <string name="term_like_terms">like terms</string>
    <string name="term_logarithmic_product_and_quotient_rule">logarithmic product and quotient rule</string>
    <string name="term_logarithmic_product_rule">logarithmic product rule</string>
    <string name="term_logarithmic_quotient_rule">logarithmic quotient rule</string>
    <string name="term_minus_in_front_of_parenthesis">- sign in front of the parenthesis</string>
    <string name="term_mixed_fraction">mixed fraction</string>
    <string name="term_mixed_fractions">mixed fractions</string>
    <string name="term_mixed_number">mixed number</string>
    <string name="term_mixed_numbers">mixed numbers</string>
    <string name="term_negative_numbers">negative numbers</string>
    <string name="term_negative_reciprocal">negative reciprocal</string>
    <string name="term_numerator_and_denominator">numerator and denominator</string>
    <string name="term_numerators">numerators</string>
    <string name="term_numerators_and_denominators">numerators and denominators</string>
    <string name="term_opposite_opposite">opposite</string>
    <string name="term_opposite_opposites">opposites</string>
    <string name="term_perfect_cube">perfect cube</string>
    <string name="term_perfect_root">perfect root</string>
    <string name="term_perfect_square">perfect square</string>
    <string name="term_plus_in_front_of_parenthesis">+ in front of the parenthesis</string>
    <string name="term_positive_numbers">positive numbers</string>
    <string name="term_power">power</string>
    <string name="term_product_of_prime_numbers">product of prime numbers</string>
    <string name="term_radical">radical</string>
    <string name="term_radicand">radicand</string>
    <string name="term_rationalize">rationalize</string>
    <string name="term_reciprocal">reciprocal</string>
    <string name="term_reciprocal_of_the_coefficient">reciprocal of the coefficient</string>
    <string name="term_reduce_the_fraction">reduce the fraction</string>
    <string name="term_repeated_addition_as_multiplication">repeated addition as multiplication</string>
    <string name="term_rule_of_sarrus">rule of Sarrus</string>
    <string name="term_rules_of_division">rules of division</string>
    <string name="term_rules_of_multiplication">rules of multiplication</string>
    <string name="term_rules_of_multiplication_and_division">rules of multiplication and division</string>
    <string name="term_square_root">square root</string>
    <string name="term_undefined">undefined</string>
    <string name="term_unnecessary_parenthesis">unnecessary parenthesis</string>
    <string name="term_unnecessary_row">unnecessary row</string>
    <string name="term_variable">variable</string>
    <string name="term_variables">variables</string>
    <string name="title_activity_about">About</string>
    <string name="title_activity_feedback">Help &amp; Feedback</string>
    <string name="title_activity_intro">Introduction</string>
    <string name="title_activity_steps">Solving Steps</string>
    <string name="tooltip_camera_editor_text">Math editor</string>
    <string name="tooltip_camera_editor_title">New!</string>
    <string name="tooltip_camera_recognition_text">tap to edit</string>
    <string name="tooltip_camera_recognition_title">Scanned formula</string>
    <string name="tooltip_camera_result_text">tap to see steps</string>
    <string name="tooltip_camera_result_title">Result</string>
    <string name="tooltip_editor_functions">Some keys have multiple functions</string>
    <string name="tooltip_editor_more">Access more functions</string>
    <string name="tooltip_editor_navigate">Navigate through formula</string>
    <string name="tooltip_result_alternate"><b>TAP</b> above for <b>ALTERNATIVE RESULT</b></string>
    <string name="tooltip_result_keyboard"><b>TAP</b> above for <b>KEYBOARD</b></string>
    <string name="undefined">&lt;p>&lt;strong>Division by zero&lt;/strong> is an operation for which you cannot find an answer, so it is &lt;strong>undefined&lt;/strong>.&lt;/p>&lt;p>To understand why, let us see how division and multiplication are related:&lt;/p>&lt;p>14 divided by 2 equals 7, so&lt;/p>&lt;p>&lt;img class=\"center\" src=\"div_zero1.svg\" alt=\"\" />&lt;/p>&lt;p>14 divided by 0 equals x, so&lt;/p>&lt;p>&lt;img class=\"center\" src=\"div_zero2.svg\" alt=\"\" />&lt;/p>&lt;p>which is not true. (&lt;strong>Any expression multiplied by 0 equals 0&lt;/strong>)&lt;/p></string>
    <string name="unlock">Unlock</string>
    <string name="unlocked_for_free_until">&lt;u>Photomath+&lt;/u> unlocked until %1$s</string>
    <string name="unlocked_until">Unlocked for free until %1$S!</string>
    <string name="unnecessary_parenthesis">"&lt;p>When the parenthesis &lt;strong style=\"color: #000000;\">doesn't have to be written, remove it&lt;/strong>. (Usually at the beginning of an expression without any sign in front of it)&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"unnecessary_parenthesis1.svg\" alt=\"\" />&lt;/p>&lt;p>&lt;img class=\"center\" src=\"unnecessary_parenthesis2.svg\" alt=\"\" />&lt;/p>"</string>
    <string name="unnecessary_row">"&lt;p>Remove from a matrix all the rows that contain &lt;strong>only zeros&lt;/strong>.&lt;/span>&lt;/p>&lt;p>&lt;strong>Note:&lt;/strong> This can only be done if the matrix is an augmented matrix (which are used to solve systems of linear equations).&lt;/span>&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class='center' src='unnecessary_row1.svg' alt='' />&lt;/p>"</string>
    <string name="variable">&lt;p>An &lt;strong style=\"color: #ff0000;\">algebraic expression&lt;/strong> is made up of terms separated by plus or minus signs.&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">term&lt;/strong> is either a single number or a variable, or number and variables multiplied together.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"terms_1.svg\" alt=\"\" />&lt;/p>&lt;p>are all terms.&lt;/p>&lt;p>Terms made of just a number, like &lt;strong>7&lt;/strong>, are called &lt;strong>constants&lt;/strong> and the letters in terms like &lt;strong>3x&lt;sup>2&lt;/sup>y&lt;sup>4&lt;/sup>&lt;/strong> are called &lt;strong style=\"color: #ff0000;\">variables&lt;/strong>.&lt;/p></string>
    <string name="variables">&lt;p>An &lt;strong style=\"color: #ff0000;\">algebraic expression&lt;/strong> is made up of terms separated by plus or minus signs.&lt;/p>&lt;p>A &lt;strong style=\"color: #ff0000;\">term&lt;/strong> is either a single number or a variable, or number and variables multiplied together.&lt;/p>&lt;p>For example:&lt;/p>&lt;p>&lt;img class=\"center\" src=\"terms_1.svg\" alt=\"\" />&lt;/p>&lt;p>are all terms.&lt;/p>&lt;p>Terms made of just a number, like &lt;strong>7&lt;/strong>, are called &lt;strong>constants&lt;/strong> and the letters in terms like &lt;strong>3x&lt;sup>2&lt;/sup>y&lt;sup>4&lt;/sup>&lt;/strong> are called &lt;strong style=\"color: #ff0000;\">variables&lt;/strong>.&lt;/p></string>
    <string name="view">View</string>
    <string name="warning_steps_not_available">This problem has no solution steps available</string>
    <string name="welcome_learn">Learn how to use</string>
    <string name="welcome_skip">I already know how to use</string>
    <string name="welcome_to">Welcome to</string>
    <string name="works_best">Works best when you write neatly!</string>
    <string name="abc_font_family_body_1_material">sans-serif</string>
    <string name="abc_font_family_body_2_material">sans-serif-medium</string>
    <string name="abc_font_family_button_material">sans-serif-medium</string>
    <string name="abc_font_family_caption_material">sans-serif</string>
    <string name="abc_font_family_display_1_material">sans-serif</string>
    <string name="abc_font_family_display_2_material">sans-serif</string>
    <string name="abc_font_family_display_3_material">sans-serif</string>
    <string name="abc_font_family_display_4_material">sans-serif-light</string>
    <string name="abc_font_family_headline_material">sans-serif</string>
    <string name="abc_font_family_menu_material">sans-serif</string>
    <string name="abc_font_family_subhead_material">sans-serif</string>
    <string name="abc_font_family_title_material">sans-serif-medium</string>
    <string name="appbar_scrolling_view_behavior">android.support.design.widget.AppBarLayout$ScrollingViewBehavior</string>
    <string name="bottom_sheet_behavior">android.support.design.widget.BottomSheetBehavior</string>
    <string name="character_counter_pattern">%1$d / %2$d</string>
    <string name="com.crashlytics.android.build_id">057c8972-4e92-47db-bcbe-b42a83e8aca8</string>
    <string name="not_available">Not available</string>
</resources>
